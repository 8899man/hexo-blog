<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天上有木月博客</title>
  
  
  <link href="/hexo-blog/atom.xml" rel="self"/>
  
  <link href="https://luoyunchong.github.io/hexo-blog/"/>
  <updated>2019-06-25T06:22:05.377Z</updated>
  <id>https://luoyunchong.github.io/hexo-blog/</id>
  
  <author>
    <name>IGeekFan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git的使用学习</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/25/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%93%E9%A2%98/Git%E7%9A%84%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/25/命令行专题/Git的使用学习/</id>
    <published>2019-06-25T05:58:06.000Z</published>
    <updated>2019-06-25T06:22:05.377Z</updated>
    
    <content type="html"><![CDATA[<ul><li>git 默认不区分文件名大小写,配置git大小写敏感</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.ignorecase <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;git 默认不区分文件名大小写,配置git大小写敏感&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
      <category term="Git" scheme="https://luoyunchong.github.io/hexo-blog/categories/Git/"/>
    
    
      <category term="Git" scheme="https://luoyunchong.github.io/hexo-blog/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo-theme-material-x+gitalk</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/25/%E5%A4%A7%E5%89%8D%E7%AB%AF/hexo-theme-material-x-gitalk/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/25/大前端/hexo-theme-material-x-gitalk/</id>
    <published>2019-06-25T05:57:09.000Z</published>
    <updated>2019-06-25T06:22:05.381Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-theme-material-x-gitalk-实现评论系统集成"><a href="#hexo-theme-material-x-gitalk-实现评论系统集成" class="headerlink" title="hexo-theme-material-x +gitalk 实现评论系统集成"></a>hexo-theme-material-x +gitalk 实现评论系统集成</h3><p>关于hexo 中使用Material-x为主题时，增加评论系统 gitalk</p><ul><li>material-x 主题  <a href="https://xaoxuu.com/wiki/material-x/third-party-services/index.html" target="_blank" rel="noopener">https://xaoxuu.com/wiki/material-x/third-party-services/index.html</a></li><li>gitalk开源地址 <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">https://github.com/gitalk/gitalk</a></li></ul><a id="more"></a><p>根目录的配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="string">要使用哪个请复制到根目录配置文件！</span></span><br><span class="line"><span class="attr">  clientID:</span> <span class="string">你的clientID</span></span><br><span class="line"><span class="attr">  clientSecret:</span> <span class="string">你的clientSecret</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">你的repo名</span>  <span class="comment">#这个直接就是仓储名</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="string">你的GitHub名</span></span><br><span class="line"><span class="attr">  admin:</span> <span class="string">[]</span> <span class="string">至少填写你的GitHub名</span></span><br></pre></td></tr></table></figure><p>clientID和clientSecret如何得到：</p><ol><li>先要有github账号， 点击 New OAuth App（后面这个链接）： <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></li><li>填写信息：<br>Application name 随便填，<br>Homepage URL 和 Authorization callback URL 都写你的 网址，我的是：<a href="https://luoyunchong.github.io/hexo-blog/">https://luoyunchong.github.io/hexo-blog/</a></li></ol><p>生成后，就会有clientID和clientSecret</p><blockquote><p>参考我的配置项</p></blockquote><p><a href="https://github.com/luoyunchong/hexo-blog/blob/docs/_config.yml" target="_blank" rel="noopener">https://github.com/luoyunchong/hexo-blog/blob/docs/_config.yml</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gitalk: </span><br><span class="line">  clientID: 70ba179c7cf0f158ad7d</span><br><span class="line">  clientSecret: 76bea5d6863b98331709de2d6220bf439426d957</span><br><span class="line">  repo: hexo-blog</span><br><span class="line">  owner: luoyunchong</span><br><span class="line">  admin: [luoyunchong]</span><br></pre></td></tr></table></figure><p>这个repo一定要是仓储名，而不是仓储地址，不然，会一直返回404 NOT FOUND</p><ul><li>报错出现 Error: Validation Failed.<br><a href="https://github.com/gitalk/gitalk/issues/102" target="_blank" rel="noopener">https://github.com/gitalk/gitalk/issues/102</a><br>总结主要的原因是<blockquote><p>由于label太长导致的无法评论,label的长度上限是50个字符，所以文章名有些长的都会生成label失败,也就没办法评论了.</p></blockquote></li></ul><p>解决办法 ：文章名经URL编码后转MD5，然后再生成label，MD5值是固定长度的。引用md5的js,然后，给location.pathname使用md5加密</p><p>我使用的material-x，打开themes/material-x/layout/_partial/scripts.ejs文件，修改成如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">    clientID: <span class="string">"&lt;%- config.gitalk.clientID %&gt;"</span>,</span><br><span class="line">    clientSecret: <span class="string">"&lt;%- config.gitalk.clientSecret %&gt;"</span>,</span><br><span class="line">    repo: <span class="string">"&lt;%- config.gitalk.repo %&gt;"</span>,</span><br><span class="line">    owner: <span class="string">"&lt;%- config.gitalk.owner %&gt;"</span>,</span><br><span class="line">    admin: <span class="string">"&lt;%- config.gitalk.admin %&gt;"</span>,</span><br><span class="line">    &lt;% <span class="keyword">if</span>(page.gitalk &amp;&amp; page.gitalk.id) &#123; %&gt;</span><br><span class="line">      id: <span class="string">"&lt;%= page.gitalk.id %&gt;"</span>,</span><br><span class="line">    &lt;% &#125; <span class="keyword">else</span> &#123; %&gt;</span><br><span class="line">      id: md5(location.pathname),      <span class="comment">// Ensure uniqueness and length less than 50</span></span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    distractionFreeMode: <span class="literal">false</span>  <span class="comment">// Facebook-like distraction free mode</span></span><br><span class="line">  &#125;);</span><br><span class="line">  gitalk.render(<span class="string">'gitalk-container'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>最重要的是引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id: md5(location.pathname</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo-theme-material-x-gitalk-实现评论系统集成&quot;&gt;&lt;a href=&quot;#hexo-theme-material-x-gitalk-实现评论系统集成&quot; class=&quot;headerlink&quot; title=&quot;hexo-theme-material-x +gitalk 实现评论系统集成&quot;&gt;&lt;/a&gt;hexo-theme-material-x +gitalk 实现评论系统集成&lt;/h3&gt;&lt;p&gt;关于hexo 中使用Material-x为主题时，增加评论系统 gitalk&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;material-x 主题  &lt;a href=&quot;https://xaoxuu.com/wiki/material-x/third-party-services/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xaoxuu.com/wiki/material-x/third-party-services/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gitalk开源地址 &lt;a href=&quot;https://github.com/gitalk/gitalk&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/gitalk/gitalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://luoyunchong.github.io/hexo-blog/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://luoyunchong.github.io/hexo-blog/tags/hexo/"/>
    
      <category term="material-x" scheme="https://luoyunchong.github.io/hexo-blog/tags/material-x/"/>
    
      <category term="gitalk" scheme="https://luoyunchong.github.io/hexo-blog/tags/gitalk/"/>
    
  </entry>
  
  <entry>
    <title>2. 重新出发-learn webpack</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/24/%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/2.%20%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91-learn%20webpack/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/24/重新出发/2. 重新出发-learn webpack/</id>
    <published>2019-06-24T14:43:22.000Z</published>
    <updated>2019-07-01T14:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="重新出发-learn-webpack"><a href="#重新出发-learn-webpack" class="headerlink" title="重新出发-learn webpack"></a>重新出发-learn webpack</h2><p>github 上搜索 webpack learn或webpack awesome</p><ul><li><a href="https://github.com/ITxiaohao/webpack4-learn" target="_blank" rel="noopener">基于 Webpack4 渐进式教程 为基础</a><br>这个非常适合初学者，24个demo，渐进式文档学习，</li><li><a href="https://github.com/webpack-china/awesome-webpack-cn" target="_blank" rel="noopener">https://github.com/webpack-china/awesome-webpack-cn</a></li></ul><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;重新出发-learn-webpack&quot;&gt;&lt;a href=&quot;#重新出发-learn-webpack&quot; class=&quot;headerlink&quot; title=&quot;重新出发-learn webpack&quot;&gt;&lt;/a&gt;重新出发-learn webpack&lt;/h2&gt;&lt;p&gt;github 上搜索 webpack learn或webpack awesome&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ITxiaohao/webpack4-learn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;基于 Webpack4 渐进式教程 为基础&lt;/a&gt;&lt;br&gt;这个非常适合初学者，24个demo，渐进式文档学习，&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack-china/awesome-webpack-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/webpack-china/awesome-webpack-cn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="重新出发" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/"/>
    
    
      <category term="webpack" scheme="https://luoyunchong.github.io/hexo-blog/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>1.重新出发-起航</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/17/%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/1.%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91-%E8%B5%B7%E8%88%AA/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/17/重新出发/1.重新出发-起航/</id>
    <published>2019-06-17T07:19:22.000Z</published>
    <updated>2019-06-25T06:44:24.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="重新出发"><a href="#重新出发" class="headerlink" title="重新出发"></a>重新出发</h2><p>还有几天大学就毕业了(21号毕业典礼)，我在大学期间，在学校跟着老师一起做了一些项目，用到的技术是 easyui+ <strong>.net</strong> framework4.x+sql server 2008+ef 5+vs2012，框架是旧三层架构，没有批量操作和事务，编辑操作时，也极易出错。</p><p>后来升级架构，用了一段时间layui+vue.js（非单页面）+abp (.net frameowork)+mysql 5.7+ef 6+vs2017，后来由于人少，还是换成了easyui 1.51 insdep  版本</p><p>我自己也了解到了一些新的技术,如vue.js的SPA,跨平台的 <strong>.net core</strong>，容器化的docker,负载均衡的nginx，只是帮别人做的一些小项目，用到了vue和 <strong>.NET Core</strong>，其他的就没有实际上线的经验，每次使用时，总是去查询相应的博客、官网，没有系统的学习文档，所以让我觉得这些基础没有打好，所以我打算重新学习一次。系统地整理出相应的知识点，打好基础。</p><p>目前用到的一些技术栈、架构风格、开发工具如下</p><p>vue.js(SPA)+<strong>.netNET Core</strong>2.2(JWT+EF Core)+Mysql 5.6+ docker+nginx+Ubuntu+vs2019（vscode)</p><h2 id="NET-Core-可学习的框架，社区等"><a href="#NET-Core-可学习的框架，社区等" class="headerlink" title=".NET Core 可学习的框架，社区等"></a>.NET Core 可学习的框架，社区等</h2><ol start="0"><li>awesome-dotnet 关于 <strong>.NET Core</strong> 的优秀项目应该都能在这找到 <a href="https://github.com/quozd/awesome-dotnet/" target="_blank" rel="noopener">https://github.com/quozd/awesome-dotnet/</a></li><li>abp vnext ，可参考<a href="https://cn.abp.io/documents/abp/latest/Index" target="_blank" rel="noopener">https://cn.abp.io/documents/abp/latest/Index</a>，我觉得它的特点是：分层更细，但复杂度更大，不过有着完善的文档与社区，架构风格统一，对于每个模块都有着相应的风格指导，另外如官网所说，他的“主要目标是提供一个便捷的基础设施来创建微服务解决方案”（目前还处于0.18待Release版本，2019-6-17）</li><li>surging 专注与 <strong>.net core</strong>下的微服务引擎的解决方案，（1.0于19年初发布，以我的水平，没有良好的入门文档，我还需要继续学习才能使用。）</li><li>.NET Core Community  国内的开源组织，有着优秀的基于.net core 的开源项目，大家可以去学习学习<br><a href="https://github.com/dotnetcore" target="_blank" rel="noopener">https://github.com/dotnetcore</a></li><li>csredis对标的是stackExchange.Redis，大家都说stackExchange.redis有的时候会超时（Timeout Bug），好像一直没有解决(项目全部使用异常可解决)，<a href="https://github.com/2881099/csredis" target="_blank" rel="noopener">https://github.com/2881099/csredis</a></li><li>FreeSql是 <strong>.net 、.net core</strong>的最方便的 ORM,     <a href="https://github.com/2881099/FreeSql" target="_blank" rel="noopener">https://github.com/2881099/FreeSql</a>（我还没用，但做这个项目的大佬一直推荐，我相信一定不错）也是做csredis的作者</li><li></li></ol><h2 id="小技巧："><a href="#小技巧：" class="headerlink" title="小技巧："></a>小技巧：</h2><ol><li>如果你想找什么资料，去github搜索可以使用 <code>awesome</code> + <em>关键字</em><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awesome vue</span><br></pre></td></tr></table></figure></li></ol><h2 id="技术学习"><a href="#技术学习" class="headerlink" title="技术学习"></a>技术学习</h2><p>1.前端相应的知识点</p><ul><li>es6</li><li>webpack</li><li>vue.js</li><li>vuex</li><li>vue-router</li><li>typescript</li><li></li></ul><ol start="2"><li>后端技术栈</li></ol><ul><li>nginx</li><li>linux 如：Ubuntu</li><li>docker</li><li>c# 如: .net core 、asp <strong>.net core</strong></li><li>java 如: spring boot</li></ul><h2 id="Github打磨"><a href="#Github打磨" class="headerlink" title="Github打磨"></a>Github打磨</h2><p> 我的github还没什么特别有价值的东西，我需要不断地打磨自己的技术 <a href="https://github.com/luoyunchong" target="_blank" rel="noopener">https://github.com/luoyunchong</a></p><ul><li>一个博客，.NET 版本，<a href="http://igeekfan.cn/" target="_blank" rel="noopener">http://igeekfan.cn/</a></li><li>一个ABP的代码生成器，使用 <strong>.NET Core2.2</strong>、Razor Pages、RazorEngine的cshtml的模板，配置生成相应的代码 <a href="http://www.dotnetcore.xin/" target="_blank" rel="noopener">http://www.dotnetcore.xin/</a></li><li>基于abp (.NET版本)的前端js、结合easyui的前端js，可打包成bower，之前为了统一不同项目下的前端基础类库。 <a href="https://luoyunchong.github.io/staticfiles/">https://luoyunchong.github.io/staticfiles/</a></li><li>基于 ABP vNext  的MicroserviceDemo、增加了iview的SPA界面， 实现前后端分离的用户角色授权管理功能 </li><li>一个使用hexo的博客,采用Material X主题，docs分支为博客源文件，发布github Pages <a href="https://luoyunchong.github.io/hexo-blog/">https://luoyunchong.github.io/hexo-blog/</a></li><li>一个基于 ASP <strong>.NET Core 2.2</strong> 的基础集成方案 <a href="https://github.com/luoyunchong/BasicTemplate" target="_blank" rel="noopener">https://github.com/luoyunchong/BasicTemplate</a><ul><li>JWT集成</li><li>EF实现事务一致性</li><li>统一的创建人、创建时间、删除人、删除时间，软删除</li><li>集成 EF Core MySQL版本</li><li>AutoMapper集成 </li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      每次使用时，总是去查询相应的博客、官网，没有系统的学习文档，所以让我觉得这些基础没有打好，所以我打算重新学习一次。系统地整理出相应的知识点，打好基础。
    
    </summary>
    
      <category term="重新出发" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/"/>
    
    
      <category term=".NET Core" scheme="https://luoyunchong.github.io/hexo-blog/tags/NET-Core/"/>
    
  </entry>
  
  <entry>
    <title>现阶段的痛点</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/12/%E5%B7%A5%E4%BD%9C/%E7%8E%B0%E9%98%B6%E6%AE%B5%E7%9A%84%E7%97%9B%E7%82%B9/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/12/工作/现阶段的痛点/</id>
    <published>2019-06-12T14:46:22.000Z</published>
    <updated>2019-06-25T06:22:05.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="现阶段的痛点："><a href="#现阶段的痛点：" class="headerlink" title="现阶段的痛点："></a>现阶段的痛点：</h3><ul><li>账号的集中式管理，密码复杂，需要记忆不同账户体系下的账号，使用相同的密码会有安全问题，若某一系统的账号泄露，易造成其他系统被撞库。</li><li>小型网站不提供注销功能，无法保证用户信息安全，就如现阶段（2019-6-12），CSDN也无法注销账号，而有时没有记住使用何种方法注册，易造成多账号情况。Microsoft提供完整的隐私删除服务，用户可自行删除搜索记录，包括浏览器，语音，位置等。简书也提供注销，QQ也提供注销功能，注销是保证用户的重要入口。</li><li>用户买卖微信，手机号，平台账号，当出现服务商出现一些活动时，薅羊毛党就会出来占便宜，会导致运营成本失控、数据样体失值、数据有效性失常、平台服务器失效、平台发展失衡 <ul><li>刷单、任务、黄牛、黑客、漏研族。</li></ul></li><li>云服务商不遵守开源精神，<a href="https://www.oschina.net/news/100948/mongodb-switches-up-its-open-source-license" target="_blank" rel="noopener">看不惯云计算公司流氓行为，MongoDB 更改开源协议</a></li></ul><p>IT产业逐渐向服务化转型。用户不需要购买软硬件，而是通过互联网向厂商订购所属的应用软件服务。IT厂商越来越倾向于通过服务收费，而不是通过售卖软硬件收费。此种情况下，一些云服务厂商将MangoDB的社区版本修改后向用户提供其数据库的托管商业版本，而不将修改的源代码公开回馈给社区。如此一来，这些云服务厂商相当于从MangoDB企业版销售中分了一杯羹，抢占了其销售份额。MangoDB更换许可协议就是要遏制云服务提供商攫取开源软件价值却不给予开源社区任何回报的行为。</p><ul><li>手机Android推送频繁，如何合理监控。<fancybox><img style="width:350px;height:350px" src="https://miao.su/images/2019/06/11/_20190611110152a5cd7.jpg" alt="真棒" align="center"></fancybox></li></ul>]]></content>
    
    <summary type="html">
    
      现阶段，我观察到的一些痛点，比如：账号集中式管理问题、各个网站注销功能不完善，导致的信息安全问题，账号买卖问题，开源问题等
    
    </summary>
    
      <category term="工作" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="账号安全" scheme="https://luoyunchong.github.io/hexo-blog/tags/%E8%B4%A6%E5%8F%B7%E5%AE%89%E5%85%A8/"/>
    
      <category term="隐私" scheme="https://luoyunchong.github.io/hexo-blog/tags/%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>ABP代码生成器</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/12/ABP/ABP%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/12/ABP/ABP代码生成器/</id>
    <published>2019-06-12T06:40:26.000Z</published>
    <updated>2019-06-25T06:22:05.370Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ABP代码生成器"><a href="#ABP代码生成器" class="headerlink" title="ABP代码生成器"></a>ABP代码生成器</h3><p>基于 DotNET Core、RazorPage，借鉴SmartCode，完成ABP的代码生成器。<br>github地址如下：</p><ul><li><a href="https://github.com/i542873057/SJNScaffolding" target="_blank" rel="noopener">https://github.com/i542873057/SJNScaffolding</a></li></ul><h3 id="代码生成器计划"><a href="#代码生成器计划" class="headerlink" title="代码生成器计划"></a>代码生成器计划</h3><ul><li>1、中文转英文字段，自动起名字，主要关键字段转换。</li><li>2、主分表代码生成</li><li>3、下拉代码自动生成，勾选</li><li>4、代码生成器部署到某一服务器中，生成后可下载生成后的代码，复制至项目中即可。<ul><li>文档：<a href="https://blog.csdn.net/q710777720/article/details/91358307" target="_blank" rel="noopener">csdn/部署至linux.md</a> 、<a href="https://github.com/i542873057/SJNScaffolding/blob/master/docs/%E9%83%A8%E7%BD%B2%E8%87%B3linux.md" target="_blank" rel="noopener">github/docs/部署至linux.md</a></li><li>项目部署地址 :<a href="http://47.106.80.39" target="_blank" rel="noopener">http://47.106.80.39</a>、<a href="http://www.dotnetcore.xin/" target="_blank" rel="noopener">http://www.dotnetcore.xin/</a></li></ul></li></ul><p>CodeLF帮程序员起变量名的网站:<a href="https://unbug.github.io/codelf/" target="_blank" rel="noopener">https://unbug.github.io/codelf/</a></p><hr><p><strong>这里主要介绍的是SJNScaffolding.RazorPage新项目的使用，他使用了. NET Core下的Microsoft.AspNetCore.Mvc.Razor类库，对于熟悉razor语法的开发者来说是非常容易的。</strong></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>准备一个这样格式的数据字典<br><fancybox><br>  <img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/2.png" alt="avatar"><br></fancybox><br>运行程序，然后首先来到配置界面，这里可以配置你要生成的表名，以及项目名称等，配置完成之后点击<strong>保存配置</strong></p><p>  <img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/3.png" alt="avatar"></p><p>表结构设置：在这里将你需要生成的字段从数据字典里面复制进来如图：<br>  注意：ID，IsDeleted，DeleterUserId，DeletionTime等字段是ABP自动生成的字段这里不必复制进来</p><p>  <img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/4.png" alt="avatar"></p><p>字段复制进来后点击导入字段，生成如下图列表，自行确定每个字段是否需要后点击<em>生成代码</em></p><p>  <img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/5.png" alt="avatar"></p><p>代码生成之后会在对应的目录下面生成对应的文件，只需要手动添加到项目中即可使用（这里还有待改进）</p><p>  <img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/6.png" alt="avatar"></p>]]></content>
    
    <summary type="html">
    
      基于 DotNET Core、RazorPage，借鉴SmartCode，完成ABP的代码生成器。
    
    </summary>
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/categories/ABP/"/>
    
    
      <category term="ABP 代码生成器" scheme="https://luoyunchong.github.io/hexo-blog/tags/ABP-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript学习记录- 数据类型基础</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/12/%E5%A4%A7%E5%89%8D%E7%AB%AF/TypeScript%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95-%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%9F%BA%E7%A1%80/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/12/大前端/TypeScript学习记录- 数据类型基础/</id>
    <published>2019-06-12T06:27:54.000Z</published>
    <updated>2019-06-25T06:22:05.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TS-学习笔记记录"><a href="#TS-学习笔记记录" class="headerlink" title="TS 学习笔记记录"></a>TS 学习笔记记录</h1><p>相关文档</p><ul><li><a href="https://ts.xcatliu.com/" target="_blank" rel="noopener">TypeScript 入门教程-xcatliu</a></li><li><a href="https://blog.csdn.net/gao531162436/article/details/79087456" target="_blank" rel="noopener">JavaScript高级程序设计（第三版）pdf的下载地址</a></li><li><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/?q=" target="_blank" rel="noopener">JS 函数式编程指南</a></li><li><a href="https://www.bilibili.com/video/av38379328/?p=1" target="_blank" rel="noopener">Typescript教程_Typescript视频教程 ts入门实战视频教程</a></li></ul><a id="more"></a><h2 id="原始数据类型"><a href="#原始数据类型" class="headerlink" title="原始数据类型"></a>原始数据类型</h2><p>原始数据类型包括布尔值、数值、字符串、null、undefined、Symbol。</p><ul><li><p>定义一个布尔值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let isOk:boolean =false;</span><br></pre></td></tr></table></figure></li><li><p>定义一个数值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let literal:number=10;</span><br></pre></td></tr></table></figure></li><li><p>定义 字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let name:string=&quot;luo&quot;;</span><br></pre></td></tr></table></figure></li><li><p>空值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> function alertName(name:string):void&#123;</span><br><span class="line">alert(&quot;my name is &quot;+name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>null 和undefined</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let u: undefined = undefined;</span><br><span class="line">let n: null = null;</span><br></pre></td></tr></table></figure></li></ul><p>void 与null和undefined不同点在于，null和undefined是所有类型的子类型，null和undefined可赋值给他的父类型。</p><h2 id="任意值"><a href="#任意值" class="headerlink" title="任意值"></a>任意值</h2><ul><li>任意值类型<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let name:any=&quot;1234&quot;;</span><br><span class="line">name = 111;</span><br></pre></td></tr></table></figure></li></ul><p>如果是 any 类型，则允许被赋值为任意类型。</p><ul><li>未声明类型的变量<br>变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型：不管后来有没有被赋值，都会推断成any类型。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let st;</span><br><span class="line">st=&quot;1111&quot;;</span><br><span class="line">st=111;</span><br></pre></td></tr></table></figure></li></ul><h2 id="类型推断"><a href="#类型推断" class="headerlink" title="类型推断"></a>类型推断</h2><p> 当定义变量时，未指定明确的类型时，TS会根据类型推论的规则推断出这个变量的类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let myFav=“This is a string!&quot;;</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let myFav:string=&quot;This is a string!&quot;;</span><br></pre></td></tr></table></figure><h2 id="联合类型"><a href="#联合类型" class="headerlink" title="联合类型"></a>联合类型</h2><p>表示取值可以为多种类型中的一种。</p><ul><li>let 变量名:变量类型|变量类型;使用  <strong>|</strong> 分隔数据类型。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let myFavoriteNumber:string|number;</span><br><span class="line">myFavoriteNumber = &apos;seven&apos;;</span><br><span class="line">myFavoriteNumber = 7;</span><br></pre></td></tr></table></figure></li></ul><ul><li>访问联合类型属性或方法。<br>要注意只有当TypeScript不确定一个联合类型的变量到底是哪个类型时，只能访问联合属性中共有的属性或方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function getLength(something: string | number): number &#123;</span><br><span class="line">    return something.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// index.ts(2,22): error TS2339: Property &apos;length&apos; does not exist on type &apos;string | number&apos;.</span><br><span class="line">//   Property &apos;length&apos; does not exist on type &apos;number&apos;.</span><br></pre></td></tr></table></figure></li></ul><p>报错原因是无法知道参数是string 还是number，number类型没有length属性，所以异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let myFavoriteNumber: string | number;</span><br><span class="line">myFavoriteNumber = &apos;seven&apos;;</span><br><span class="line">console.log(myFavoriteNumber.length); // 5</span><br><span class="line">myFavoriteNumber = 7;</span><br><span class="line">console.log(myFavoriteNumber.length); // 编译时报错</span><br><span class="line"></span><br><span class="line">// index.ts(5,30): error TS2339: Property &apos;length&apos; does not exist on type &apos;number&apos;.</span><br></pre></td></tr></table></figure><p>只有console.log(myFavoriteNumber.length); // 编译时报错，第二行中 myFavoriteNumber 被推断成 <strong>string</strong>，所以 访问<strong>length</strong>时无异常，第四行 其被推断成 <strong>number</strong>,访问<strong>length</strong>会异常。</p><h2 id="对象的类型-接口"><a href="#对象的类型-接口" class="headerlink" title="对象的类型-接口"></a>对象的类型-接口</h2><p>接口是一种规范，他定义了一个事物的基础属性，规则。</p><ul><li>定义接口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">interface Person &#123;</span><br><span class="line">    readonly id:number;</span><br><span class="line">    name: string;</span><br><span class="line">    age?: number;</span><br><span class="line">    [propName: string]:any;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>id 前加 <strong>readonly</strong> 表示该字段为只读属性，只有第一次给对象 <strong>Person</strong>赋值时 <strong>id</strong> 必须有值，后面无法给此值赋值。<br>age后面加 <strong>?</strong> 表示该属性为可选属性。定义变量时可为空，<br>[propName: string]  任意属性 ,定义属性值 为 <strong>string</strong> 类型的值。<strong>当定义任意属性后，确定的属性和可选属性必须为这个类型的子集</strong></p><h2 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h2><ul><li><p>「类型 + 方括号」来表示数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let fibonacci: number[] = [1, 1, 2, 3, 5];</span><br><span class="line">let fibonacci: (number | string)[] = [1, &apos;1&apos;, 2, 3, 5];</span><br><span class="line">// any 表示数组中可出现任意类型,也可使用默认的类型推断。去掉类型 any[]</span><br><span class="line">let list: any[] = [&apos;Xcat Liu&apos;, 25, &#123; website: &apos;http://xcatliu.com&apos; &#125;];</span><br></pre></td></tr></table></figure></li><li><p>数组泛型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Array&lt;elemType&gt; 来表示数组</span><br><span class="line"></span><br><span class="line">let fibonacci: Array&lt;number&gt; = [1, 1, 2, 3, 5];</span><br></pre></td></tr></table></figure></li><li><p>使用接口实现数组</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface NumberArray &#123;</span><br><span class="line">    [index: number]: number;</span><br><span class="line">&#125;</span><br><span class="line">let fibonacci: NumberArray = [1, 1, 2, 3, 5];</span><br></pre></td></tr></table></figure><ul><li>类数组<br>内置对象 IArguments <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sum() &#123;</span><br><span class="line">    let args: IArguments = arguments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="函数的类型"><a href="#函数的类型" class="headerlink" title="函数的类型"></a>函数的类型</h2><ul><li>函数声明<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sum(x: number, y: number): number &#123;</span><br><span class="line">    return x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>函数表达式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let mySum=function(x:number,y:number):number&#123;</span><br><span class="line">return x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mySum其实未指定类型，而是通过类型推断实现的，手动指定mySum的类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let mySum:(x:number,y:number)=&gt;number=function(x:number,y:number):number&#123;</span><br><span class="line">return x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在TyepScript中  <strong>=&gt;</strong> 表示函数的定义，<strong>左边是输入类型，右边是输出类型</strong></p><p><a href="http://es6.ruanyifeng.com/#docs/function#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0" target="_blank" rel="noopener">ES6中的箭头函数相关介绍</a></p><ul><li>使用接口定义函数类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">interface searchFunc&#123;</span><br><span class="line">(source:string,subString:string):boolean;</span><br><span class="line">&#125;</span><br><span class="line">let mySearch:searchFunc;</span><br><span class="line"></span><br><span class="line">mySearch=function(source:string,subString:string):boolean&#123;</span><br><span class="line">    return source.search(subString) !== -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可选参数、参数默认值<br>使用 <strong>？</strong> 表示可选择的参数，有默认值的参数为可选参数，但不受 <strong>「可选参数必须接在必需参数后面」的限制了</strong><br>可选参数必须接在必需参数后面。换句话说，可选参数后面不允许再出现必须参数了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function buildName(firstName: string=&apos;Tom&apos;, lastName?: string) &#123;</span><br><span class="line">    if (lastName) &#123;</span><br><span class="line">        return firstName + &apos; &apos; + lastName;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return firstName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">let tomcat = buildName(&apos;Tom&apos;, &apos;Cat&apos;);</span><br><span class="line">let tom = buildName(&apos;Tom&apos;);</span><br></pre></td></tr></table></figure><h2 id="类型断言"><a href="#类型断言" class="headerlink" title="类型断言"></a>类型断言</h2><p>断言，不是类型转换，无法将一个联合类型转换成一个不存在的类型是不可以的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//定义类型:&lt;类型&gt;值</span><br><span class="line">let something: string | number=&quot;1234&quot;;</span><br><span class="line">let str=&lt;string&gt;something;//这是正确的，可以将联合类型转换成一个更加具体的类型</span><br><span class="line">let bol=&lt;boolearn&gt;something;//异常，Type &apos;string | number&apos; cannot be converted to type &apos;boolean&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TS-学习笔记记录&quot;&gt;&lt;a href=&quot;#TS-学习笔记记录&quot; class=&quot;headerlink&quot; title=&quot;TS 学习笔记记录&quot;&gt;&lt;/a&gt;TS 学习笔记记录&lt;/h1&gt;&lt;p&gt;相关文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ts.xcatliu.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 入门教程-xcatliu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/gao531162436/article/details/79087456&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript高级程序设计（第三版）pdf的下载地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/?q=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JS 函数式编程指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/av38379328/?p=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Typescript教程_Typescript视频教程 ts入门实战视频教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="TypeScript" scheme="https://luoyunchong.github.io/hexo-blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio如何增加版权信息</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/12/%E5%A4%A7%E5%90%8E%E7%AB%AF/Visual%20Studio%E5%A6%82%E4%BD%95%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/12/大后端/Visual Studio如何增加版权信息/</id>
    <published>2019-06-11T16:56:03.000Z</published>
    <updated>2019-06-25T06:22:05.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Visual-Studio如何增加版权信息"><a href="#Visual-Studio如何增加版权信息" class="headerlink" title="Visual Studio如何增加版权信息"></a><a href="https://www.cnblogs.com/allenxt/p/8472979.html" target="_blank" rel="noopener">Visual Studio如何增加版权信息</a></h2><blockquote><p>怎么实现，上面链接里的文章应该已经很清楚了，记录一下本地的版权情况。</p></blockquote><ul><li><p>我本地vs2017安装位置的如下：<strong>E:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\ItemTemplates\CSharp\Code\2052\Class</strong></p><pre><code>/* * CLR版本:          $clrversion$ * 命名空间名称/文件名:    $rootnamespace$/$safeitemname$ * 作    者：天上有木月 * 创建时间：$time$ * 邮箱：igeekfan@foxmail.com * 文件功能描述：  *  * 修改人：  * 时间： * 修改说明： */</code></pre></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>clrversion</td><td>当前系统CLR版本号</td></tr><tr><td>GUID [1-10]</td><td>生成全局唯一标识符,可以生成10个 (例如:guid1)</td></tr><tr><td>itemname</td><td>打开添加新建项时输入的文件名称</td></tr><tr><td>machinename</td><td>当前机器的名称(如:pc1)</td></tr><tr><td>registeredorganization</td><td>注册的组织名</td></tr><tr><td>rootnamespace</td><td>命名空间名</td></tr><tr><td>safeitemname</td><td>保存的文件名</td></tr><tr><td>time</td><td>当前系统时间,格式:DD/MM/YYYY 00:00:00.</td></tr><tr><td>userdomain</td><td>用户所在的域</td></tr><tr><td>username</td><td>当前系统用户名</td></tr><tr><td>year</td><td>当前系统时间 YYY</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      关于VS增加版权问题，及相关配置项，参考等。
    
    </summary>
    
      <category term="Visual Studio" scheme="https://luoyunchong.github.io/hexo-blog/categories/Visual-Studio/"/>
    
    
      <category term=".NET" scheme="https://luoyunchong.github.io/hexo-blog/tags/NET/"/>
    
      <category term="Visual Studio" scheme="https://luoyunchong.github.io/hexo-blog/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>.NET Framework 下的RazorEngine代码生成原理介绍</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/12/%E5%A4%A7%E5%90%8E%E7%AB%AF/RazorEngine%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/12/大后端/RazorEngine代码生成原理介绍/</id>
    <published>2019-06-11T16:56:03.000Z</published>
    <updated>2019-06-25T06:22:05.388Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RazorEngine模板引擎"><a href="#RazorEngine模板引擎" class="headerlink" title="RazorEngine模板引擎"></a>RazorEngine模板引擎</h3><p>在旧版本下<a href="https://github.com/i542873057/SJNScaffolding" target="_blank" rel="noopener">https://github.com/i542873057/SJNScaffolding</a></p><blockquote><p><strong>旧版本中使用RazorEngine模板引擎技术，对于熟悉razor语法的开发者来说是非常容易的。</strong></p></blockquote><h3 id="如何使用Razor实现代码生成器"><a href="#如何使用Razor实现代码生成器" class="headerlink" title="如何使用Razor实现代码生成器"></a>如何使用Razor实现代码生成器</h3><p><strong>这里提供最简单的一个栗子</strong></p><ol><li><p>CopyRightTemplate.cshtml模板代码如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@model SJNScaffolding.Models.TemplateModels.CopyRightUserInfo</span><br><span class="line">    <span class="comment">//=============================================================</span></span><br><span class="line">    <span class="comment">// 创建人:              @Model.UserName</span></span><br><span class="line">    <span class="comment">// 创建时间:           @Model.CreateTime</span></span><br><span class="line">    <span class="comment">// 邮箱：             @Model.EmailAddress</span></span><br><span class="line">    <span class="comment">//==============================================================</span></span><br></pre></td></tr></table></figure></li><li><p>对应的实体类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CopyRightUserInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> UserName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> EmailAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime CreateTime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> FileRemark &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对应的test方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据路径。要根据自己实际情况调整</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> BasePath = <span class="string">@"..\..\..\SJNScaffolding\"</span>;</span><br><span class="line">[<span class="meta">TestMethod</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCorpyRight</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> path = BasePath + <span class="string">"Templates\\CopyRightTemplate.cshtml"</span>;</span><br><span class="line">    <span class="keyword">var</span> template = File.ReadAllText(path);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">string</span> content = Engine.Razor.RunCompile(template, <span class="string">"CopyRightTemplate"</span>, <span class="keyword">typeof</span>(CopyRightUserInfo), <span class="keyword">new</span> CopyRightUserInfo</span><br><span class="line">    &#123;</span><br><span class="line">        CreateTime = DateTime.Now,</span><br><span class="line">        EmailAddress = <span class="string">"710277267@qq.com"</span>,</span><br><span class="line">        UserName = <span class="string">"IGeekFan"</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>下断点后运行，content变量    </p></li></ol><p><img src="https://github.com/i542873057/SJNScaffolding/raw/master/Img/1.png" alt="SJNScaffolding"></p><p><strong>旧版本使用WPF进行开发，对应的项目名为：SJNScaffolding.WPF，已弃用</strong></p>]]></content>
    
    <summary type="html">
    
      在.NET Framework框架中，将一个cshtml文件中的Razor模板，使用RazorEngine，将数据绑定上去，生成相应的页面文本
    
    </summary>
    
      <category term=".NET Framework" scheme="https://luoyunchong.github.io/hexo-blog/categories/NET-Framework/"/>
    
    
      <category term=".NET Framework" scheme="https://luoyunchong.github.io/hexo-blog/tags/NET-Framework/"/>
    
      <category term="RazorEngine" scheme="https://luoyunchong.github.io/hexo-blog/tags/RazorEngine/"/>
    
      <category term="代码生成器" scheme="https://luoyunchong.github.io/hexo-blog/tags/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Docker 、nginx 学习记录</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/10/%E5%A4%A7%E5%90%8E%E7%AB%AF/Docker%20%E3%80%81nginx%20%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/10/大后端/Docker 、nginx 学习记录/</id>
    <published>2019-06-09T17:00:22.000Z</published>
    <updated>2019-06-25T06:44:24.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-学习记录"><a href="#Docker-学习记录" class="headerlink" title="Docker  学习记录"></a>Docker  学习记录</h2><p>Docker Desktop 在windows 10下安装正常，Hyper-V也正常安装，但Hyper-V下无法打开虚拟交换机管理器，提示“尝试检索虚拟交换列表时出错”，也无法快速创建虚拟机，提示“xx异常”。事件查看器-&gt;Windows日志-&gt;系统中，Hyper-V-VmSwitch 一直提示 类似”VMSwitch driver due to error”</p><ul><li><a href="https://www.cnblogs.com/GeDiao/p/7975667.html" target="_blank" rel="noopener">Hyper-V管理器无法打开虚拟交换机管理，别人的方法，但无济于事</a></li></ul><p>别人都是说去在windows功能上打开Hyper-v即可，而我开启了一直不行，我这个主要是Hyper-V问题，导致Docker服务一直无法正常启动。微软的论坛也找了，没人能解决，说重装系统？这只能终极解决方案。下面这个链接，我也回答了一下。</p><ul><li><a href="https://social.msdn.microsoft.com/Forums/healthvault/zh-CN/cf5c267b-1ca0-40dd-9959-5ecb3475a06c/hyperv?forum=window10app" target="_blank" rel="noopener">hyperv 无法打开虚拟交换机管理器，报错“尝试检索虚拟交换机列表时出错</a></li></ul><p><strong>后来找到解决办法，在设置-更新和安全-Windows预览体验计划，先去官网申请，申请后，升级系统，他会帮我修复Hyper-V.</strong></p><a id="more"></a><h2 id="Docker-相关文档"><a href="#Docker-相关文档" class="headerlink" title="Docker 相关文档"></a>Docker 相关文档</h2><p><a href="https://www.cnblogs.com/codelove/p/10030439.html" target="_blank" rel="noopener">Docker最全教程——从理论到实战(一)</a></p><p><a href="http://dockone.io/article/126" target="_blank" rel="noopener">八个Docker的真实应用场景</a></p><p><a href="https://blog.csdn.net/julien71/article/details/79760919" target="_blank" rel="noopener">docker pull很慢解决办法、配置阿里镜像</a></p><p><a href="https://www.cnblogs.com/zxtceq/p/7403953.html" target="_blank" rel="noopener">ASP.NET Core开发Docker部署</a></p><p>Docker 中的三个概念，镜像（Image)、容器（Container)、仓库（Repository）</p><p>一个Image可有多个Container，我们可以把Image发布至Dokcer提供的仓库中，提供给他人使用。</p><h2 id="Dockerfile-文件规则"><a href="#Dockerfile-文件规则" class="headerlink" title="Dockerfile 文件规则"></a>Dockerfile 文件规则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Docker-命令行"><a href="#Docker-命令行" class="headerlink" title="Docker  命令行"></a>Docker  命令行</h2><ul><li>Command-Line Interfaces <a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/run/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker images  # 查看所有镜像</span><br><span class="line"></span><br><span class="line">docker ps -a #所有正在运行的容器Container</span><br><span class="line">docker ps -l #最后启动的容器</span><br><span class="line"></span><br><span class="line">docker rm 容器id   #删除容器</span><br><span class="line">ocker rm $(docker ps -q -a) #一次性删除所有的容器</span><br><span class="line"></span><br><span class="line">docker rmi 镜像id/镜像名称  #删除镜像</span><br><span class="line">docker rmi $(docker images -q) #一次性删除所有的镜像。</span><br><span class="line"></span><br><span class="line">docker build -t igeekfan/demo .  #运行构建命令,构建Docker 镜像。 </span><br><span class="line"></span><br><span class="line">docker run 镜像 #运行</span><br><span class="line">docker run -it -p 5000:80 igeekfan/demo</span><br><span class="line">#5000是运行后，docker对外的端口，80是这个服务对外的端口，其中Dockerfile 存在语句EXPOSE 80</span><br><span class="line">docker run -d -p 5000:80 igeekfan/demo </span><br><span class="line">-d 参数后台运行</span><br><span class="line"></span><br><span class="line">docker start 容器id</span><br><span class="line">docker restart 容器id</span><br><span class="line">docker stop 容器id #终止容器。</span><br><span class="line">docker logs $CONTAINER_ID ##在container外面查看它的输出 </span><br><span class="line">docker attach $CONTAINER_ID ##连接上容器实时查看：</span><br><span class="line"></span><br><span class="line">docker pull microsoft/dotnet  #单独安装某一镜像</span><br><span class="line"></span><br><span class="line">docker save 镜像id &gt; 文件 #持久化镜像</span><br><span class="line">docker load &lt; 文件</span><br></pre></td></tr></table></figure></li></ul><p>我们如果想将Docker 放置到其他机器运行，很简单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#直接保存镜像，然后复制镜像到其他机器，然后使用docker 命令load 既可。</span><br><span class="line"></span><br><span class="line">docker save igeekfan/demo &gt; demo.tar</span><br><span class="line"></span><br><span class="line">#然后加载命令</span><br><span class="line"></span><br><span class="line">docker load &lt; demo.tar</span><br></pre></td></tr></table></figure><h2 id="nginx-相关命令"><a href="#nginx-相关命令" class="headerlink" title="nginx 相关命令"></a>nginx 相关命令</h2><p>Ubuntu 进入root 权限，不用每次加sudo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su </span><br><span class="line">#然后输入root 密码</span><br></pre></td></tr></table></figure><p>配置nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>nginx 验证配置是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>重新加载nginx配置项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>状态、重启、停止、启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service nginx status </span><br><span class="line">service nginx restart</span><br><span class="line">service nginx stop </span><br><span class="line">service nginx start</span><br></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/jasonzhoujx/article/details/80360459" target="_blank" rel="noopener">Ubuntu18.04更换镜像源</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker-学习记录&quot;&gt;&lt;a href=&quot;#Docker-学习记录&quot; class=&quot;headerlink&quot; title=&quot;Docker  学习记录&quot;&gt;&lt;/a&gt;Docker  学习记录&lt;/h2&gt;&lt;p&gt;Docker Desktop 在windows 10下安装正常，Hyper-V也正常安装，但Hyper-V下无法打开虚拟交换机管理器，提示“尝试检索虚拟交换列表时出错”，也无法快速创建虚拟机，提示“xx异常”。事件查看器-&amp;gt;Windows日志-&amp;gt;系统中，Hyper-V-VmSwitch 一直提示 类似”VMSwitch driver due to error”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/GeDiao/p/7975667.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hyper-V管理器无法打开虚拟交换机管理，别人的方法，但无济于事&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;别人都是说去在windows功能上打开Hyper-v即可，而我开启了一直不行，我这个主要是Hyper-V问题，导致Docker服务一直无法正常启动。微软的论坛也找了，没人能解决，说重装系统？这只能终极解决方案。下面这个链接，我也回答了一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/healthvault/zh-CN/cf5c267b-1ca0-40dd-9959-5ecb3475a06c/hyperv?forum=window10app&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hyperv 无法打开虚拟交换机管理器，报错“尝试检索虚拟交换机列表时出错&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;后来找到解决办法，在设置-更新和安全-Windows预览体验计划，先去官网申请，申请后，升级系统，他会帮我修复Hyper-V.&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习记录" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="nginx" scheme="https://luoyunchong.github.io/hexo-blog/tags/nginx/"/>
    
      <category term="Docker" scheme="https://luoyunchong.github.io/hexo-blog/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>好用的前后端类库及安装包整合下载</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/10/%E5%A4%A7%E5%89%8D%E7%AB%AF/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%89%8D%E5%90%8E%E7%AB%AF%E7%B1%BB%E5%BA%93%E5%8F%8A%E5%AE%89%E8%A3%85%E5%8C%85%E6%95%B4%E5%90%88%E4%B8%8B%E8%BD%BD/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/10/大前端/好用的前后端类库及安装包整合下载/</id>
    <published>2019-06-09T17:00:22.000Z</published>
    <updated>2019-06-25T06:42:58.563Z</updated>
    
    <content type="html"><![CDATA[<h4 id="记录平常使用的一些前端插件"><a href="#记录平常使用的一些前端插件" class="headerlink" title="记录平常使用的一些前端插件"></a>记录平常使用的一些前端插件</h4><ul><li><a href="http://www.wangeditor.com/" target="_blank" rel="noopener">wangEditor3</a> 基于javascript和css开发的 Web富文本编辑器， 轻量、简洁、易用、开源免费</li><li><a href="http://fex.baidu.com/webuploader/" target="_blank" rel="noopener">webuploader</a> 上传控件，flash+H5 兼容IE6+，Andorid 4+，IOS 6+</li><li><a href="https://docsify.js.org/#/" target="_blank" rel="noopener">docsify.js</a>   一个基础markdown的文档生成器，可以写API接口文档。A magical documentation site generator.</li><li>cropper 头像上传，裁剪，旋转等，blueimp-canvas-to-blob 解决部分浏览器兼容性</li><li><a href="https://www.insdep.com/" target="_blank" rel="noopener">JQuery-EasyUI-insdep</a> 基于Easyui的样式扩展UI，变得更好看，多了许多插件。</li><li>jquery-extensions　<a href="https://pan.baidu.com/s/1EDYwfHgGcQEA6S5N8-j_jg" target="_blank" rel="noopener">源文件下载地址</a> 已无人维护，开源地址已经找不到了，该扩展基于easyui1.3.6，在本项目中不可直接引用发布后的压缩文件，必须拆分引用,按照依赖顺序引用该目录下的扩展:bower_components\jquery-extensions\jeasyui-extensions,部分bug已解决，有些扩展在新版本的easyui已经有了，所以在extensions中，有些可删除。<ul><li>jquery.jdirk.js 为js扩展了许多通用的方法,extensions-master依赖此js,完整的代码都在extensions-master中</li><li><h4 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h4></li></ul></li></ul><ul><li>redis.msi文件  <a href="https://pan.baidu.com/s/1Hb0nQCm5gCIJsFi__ppQSw" target="_blank" rel="noopener">安装包</a> 缓存使用redis</li><li>redis-desktop-manager.exe 文件 链接：<a href="https://pan.baidu.com/s/1c3ra73E" target="_blank" rel="noopener">https://pan.baidu.com/s/1c3ra73E</a> 密码：k81k</li><li>SQL Server 2012 链接：<a href="https://pan.baidu.com/s/1KcJ0nKW-PUcXImXPbb7MJQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1KcJ0nKW-PUcXImXPbb7MJQ</a> 密码：g8av  </li><li>Visual Studio 2017 直接从官网下载，安装时，只选择ASP.NET和Web开发即可。</li><li>TortoiseSVN <a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener">官网</a></li><li>MYSQL 官网下载即可，选择5.7.22版本</li><li>Navicat for mysql <a href="https://pan.baidu.com/s/1ENh-ZVZg8GI_DBk26BtM-Q" target="_blank" rel="noopener">百度网盘地址</a> 密码：mi2p</li></ul><h4 id="另外vs2017中的插件-可选"><a href="#另外vs2017中的插件-可选" class="headerlink" title="另外vs2017中的插件(可选)"></a>另外vs2017中的插件(可选)</h4><ul><li>visualsvn for visual studio 2017</li><li>resharper </li></ul><h4 id="staticfiles开源库介绍、通用js"><a href="#staticfiles开源库介绍、通用js" class="headerlink" title="staticfiles开源库介绍、通用js"></a>staticfiles开源库介绍、通用js</h4><blockquote><p>维护地址为 <a href="http://ip/summary/libs/staticfiles.git" target="_blank" rel="noopener">http://ip/summary/libs/staticfiles.git</a><br>bower 静态资源地址 <a href="http://ip:5678/" target="_blank" rel="noopener">http://ip:5678/</a></p></blockquote><ul><li>easyui.default-extension.js为easyui增加默认属性，扩展jquery方法</li><li>base.js 大多数项目通用的com对象，</li><li>passwordComplexityHelper.js 让密码也可以在后台配置</li><li>libs 这个文件夹下的js是Abp自带的通用js，改了abp.jquery.js，增加了abp.easyui.js,abp.layer.js，统一的调用接口，可以实现不同的弹框效果</li></ul><blockquote><p>根目录新建.bowerrc文件，实现自定义bower仓库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry&quot;: &quot;http://ip:5678&quot;,</span><br><span class="line">    &quot;timeout&quot;: 30000</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在web项目目录执行以下命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower install staticfiles --save</span><br></pre></td></tr></table></figure><h3 id="后端技术"><a href="#后端技术" class="headerlink" title="后端技术"></a>后端技术</h3><blockquote><p>后端使用语言为C#,访问数据库技术主要采用EntityFrameWork6,复杂sql可使用dapper，数据库使用SQL server ,可切换成mysql,框架使用的ABP   <a href="http://www.aspnetboilerplate.com/" target="_blank" rel="noopener">官网</a></p><ul><li>ABP框架有哪些好处，可以参考如下文章<a href="https://www.cnblogs.com/farb/p/ABPIntro.html" target="_blank" rel="noopener">ABP的一些优点</a></li></ul><ul><li>在使用框架时，我们会发现，代码会更加规范，系统也更加稳定，</li></ul></blockquote><h4 id="ABP-后端已完成的功能"><a href="#ABP-后端已完成的功能" class="headerlink" title="ABP 后端已完成的功能"></a>ABP 后端已完成的功能</h4><blockquote><p>后端系统基本功能已经完善,还差一些，如:导入excel,导出excel,工作流。</p></blockquote><ul><li>用户-角色-权限-日志-设置-文件-组织-登录-注册-找回密码-注册邮件激活-短信-双身份登录验证-通用增删改查-集成Dapper-自动迁移-svn提交后自动发布-缓存redis-字典管理-错误处理（跳404，403等）-兼容性差跳下载浏览器页面-不同开发模式下，使用不同的配置</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      记录平常使用的一些前端插件、安装包下载地址、插件、开源库等。
    
    </summary>
    
      <category term="大前端" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET Core 部署至ubuntu、部署至ubuntu下的Docker</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/06/09/%E5%A4%A7%E5%90%8E%E7%AB%AF/ASP.NET%20Core%20%E9%83%A8%E7%BD%B2%E8%87%B3ubuntu%E3%80%81%E9%83%A8%E7%BD%B2%E8%87%B3ubuntu%E4%B8%8B%E7%9A%84Docker/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/06/09/大后端/ASP.NET Core 部署至ubuntu、部署至ubuntu下的Docker/</id>
    <published>2019-06-08T16:54:15.000Z</published>
    <updated>2019-06-25T06:44:26.891Z</updated>
    
    <content type="html"><![CDATA[<ul><li>关于ABP代码 生成器的使用介绍 <a href="https://blog.csdn.net/q710777720/article/details/91358450" target="_blank" rel="noopener">https://blog.csdn.net/q710777720/article/details/91358450</a></li></ul><p>将自定义-ABP代码生成器，使用. NET Core下的Razor模板引擎，配合RazorPage界面，可自定义cshtml模板，开源地址： <a href="https://github.com/i542873057/SJNScaffolding" target="_blank" rel="noopener">https://github.com/i542873057/SJNScaffolding</a> 部署至ubuntu、Docker的记录</p><blockquote><p>相关技术 .NET Core2.2+Docker+Nginx+Supervisor </p></blockquote><a id="more"></a><h2 id="部署至ubuntu下"><a href="#部署至ubuntu下" class="headerlink" title="部署至ubuntu下"></a>部署至ubuntu下</h2><p>可参考 <a href="https://www.cnblogs.com/linezero/p/aspnetcoreubuntu.html" target="_blank" rel="noopener">https://www.cnblogs.com/linezero/p/aspnetcoreubuntu.html</a></p><p>需要安装 .NET Core 2.2，直接看官网</p><p><a href="https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-current" target="_blank" rel="noopener">https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-current</a></p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>使用VS2017或VS2019,右击SJNScaffolding.RazorPage-&gt;发布-&gt;配置后，如下图所示，点击保存后，生成发布包。</p><p><img src="https://miao.su/images/2019/06/09/Deploy-Settingsb6cfb.png" alt="Deploy-Settingsb6cfb.png"></p><p>将生成的这个文件夹内容，使用xftp上传至linux的某一文件夹中。<br>使用以下命令运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/admin/SJNScaffolding # 先cd的项目目录 </span><br><span class="line">dotnet SJNScaffolding.RazorPage.dll #启动web项目，默认应该是http://localhost:5000</span><br></pre></td></tr></table></figure><p>参考下图</p><fancybox>![https://miao.su/images/2019/06/09/5NOPVXLDV0IMA_QO7cdd8d.png](https://miao.su/images/2019/06/09/5NOPVXLDV0IMA_QO7cdd8d.png)</fancybox><p>ip:端口是无法访问到的，<br>命令行中执行，下面这行命令，是正常的，但只能服务器访问，外网无法访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://localhost:5000</span><br></pre></td></tr></table></figure><h3 id="需要使用nginx反向代理"><a href="#需要使用nginx反向代理" class="headerlink" title="需要使用nginx反向代理"></a>需要使用nginx反向代理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装好以后，定位到 /etc/nginx/sites-available/default 文件。更改server 节点如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:5000;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection keep-alive;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重新启动 Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart </span><br><span class="line">#sudo nginx -s reload　  #也可以使用这条命令重新加载配置项</span><br></pre></td></tr></table></figure><h3 id="Supervisor-守护进程"><a href="#Supervisor-守护进程" class="headerlink" title="Supervisor 守护进程"></a>Supervisor 守护进程</h3><p>此时使用ctrl+c会退出项目运行状态，无法关闭shell,可使用<strong>Supervisor</strong>，目的是上的是服务器开机时即启动服务器上的发布的 ASP .NET Core Web项目</p><p><a href="https://www.cnblogs.com/savorboard/p/dotnetcore-supervisor.html" target="_blank" rel="noopener">ASP.NET Core Linux下为 dotnet 创建守护进程（必备知识）<br>前言</a></p><p><a href="https://www.jianshu.com/p/f6d2203807ab" target="_blank" rel="noopener">结合Nginx将asp net core部署在Linux(Ubuntu)上[基于微软官方文档翻译并补充]</a></p><p><a href="https://www.cnblogs.com/xyfy/p/9881855.html" target="_blank" rel="noopener">Ubuntu 18.04 安装部署Net Core、Nginx全过程</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install supervisor  # 安装 守护进程 supervisor</span><br><span class="line">cd /etc/supervisor/conf.d/     # 进入配置目录 </span><br><span class="line">vim SJNScaffolding.conf        # 新建 一个配置文件 ，只要以 .conf结尾即可。</span><br></pre></td></tr></table></figure><p>在文件SJNScaffolding.conf中配置如下内容，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[program:SJNScaffolding]</span><br><span class="line">command=dotnet /home/admin/SJNScaffolding.RazorPage/SJNScaffolding.RazorPage.dll</span><br><span class="line">directory=/home/admin/SJNScaffolding.RazorPage</span><br><span class="line">environment=ASPNETCORE__ENVIRONMENT=Production</span><br><span class="line">user=www-data</span><br><span class="line">stopsignal=INT</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true </span><br><span class="line">startsecs=1</span><br><span class="line">stderr_logfile=/var/log/SJNScaffolding.RazorPage.err.log </span><br><span class="line">stdout_logfile=/var/log/SJNScaffolding.RazorPage.out.log</span><br></pre></td></tr></table></figure><p>有相应注释的，conf不能有注释，虽然没有任何异常，但无法启动服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[program:HelloWebApp]</span><br><span class="line">command=dotnet HelloWebApp.dll  #要执行的命令</span><br><span class="line">directory=/home/yxd/Workspace/publish #命令执行的目录</span><br><span class="line">environment=ASPNETCORE__ENVIRONMENT=Production #环境变量</span><br><span class="line">user=www-data  #进程执行的用户身份</span><br><span class="line">stopsignal=INT</span><br><span class="line">autostart=true #是否自动启动</span><br><span class="line">autorestart=true #是否自动重启</span><br><span class="line">startsecs=1 #自动重启间隔</span><br><span class="line">stderr_logfile=/var/log/HelloWebApp.err.log #标准错误日志</span><br><span class="line">stdout_logfile=/var/log/HelloWebApp.out.log #标准输出日志</span><br></pre></td></tr></table></figure><p>重启守护进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/supervisor restart #或 sudo service supervisor restart</span><br><span class="line">#或</span><br><span class="line"># 暂停服务supervisor，启动服务supervisor</span><br><span class="line">sudo service supervisor stop</span><br><span class="line">sudo service supervisor start</span><br><span class="line">#查看日志</span><br><span class="line">tail -f  /var/log/SJNScaffolding.RazorPage.out.log</span><br></pre></td></tr></table></figure><p>设置ubuntu下的supervisor开机 自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>在exit 0 之前加入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/supervisord</span><br></pre></td></tr></table></figure><h2 id="使用Docker-方式部署"><a href="#使用Docker-方式部署" class="headerlink" title="使用Docker 方式部署"></a>使用Docker 方式部署</h2><p>可参考此文档 ：<a href="https://www.cnblogs.com/zxtceq/p/7403953.html" target="_blank" rel="noopener">ASP.NET Core开发Docker部署</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#1.本地安装Docker for Windows后，可使用Docker方式运行</span><br><span class="line">FROM mcr.microsoft.com/dotnet/core/aspnet:2.2-stretch-slim AS base</span><br><span class="line">WORKDIR /app</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">FROM mcr.microsoft.com/dotnet/core/sdk:2.2-stretch AS build</span><br><span class="line">WORKDIR /src</span><br><span class="line">COPY [&quot;SJNScaffolding.RazorPage/SJNScaffolding.RazorPage.csproj&quot;, &quot;SJNScaffolding.RazorPage/&quot;]</span><br><span class="line">COPY [&quot;SJNScaffolding/SJNScaffolding.csproj&quot;, &quot;SJNScaffolding/&quot;]</span><br><span class="line">RUN dotnet restore &quot;SJNScaffolding.RazorPage/SJNScaffolding.RazorPage.csproj&quot;</span><br><span class="line">COPY . .</span><br><span class="line">WORKDIR &quot;/src/SJNScaffolding.RazorPage&quot;</span><br><span class="line">RUN dotnet build &quot;SJNScaffolding.RazorPage.csproj&quot; -c Release -o /app</span><br><span class="line"></span><br><span class="line">FROM build AS publish</span><br><span class="line">RUN dotnet publish &quot;SJNScaffolding.RazorPage.csproj&quot; -c Release -o /app</span><br><span class="line"></span><br><span class="line">FROM base AS final</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY --from=publish /app .</span><br><span class="line">ENTRYPOINT [&quot;dotnet&quot;, &quot;SJNScaffolding.RazorPage.dll&quot;]</span><br><span class="line"></span><br><span class="line">#2. 发布时，使用此Dockerfile配置</span><br><span class="line">#FROM mcr.microsoft.com/dotnet/core/aspnet:2.2-stretch-slim AS base</span><br><span class="line">#COPY . /app</span><br><span class="line">#WORKDIR /app</span><br><span class="line">#EXPOSE 80</span><br><span class="line">#ENTRYPOINT [&quot;dotnet&quot;, &quot;SJNScaffolding.RazorPage.dll&quot;]</span><br></pre></td></tr></table></figure><p>把第”2. 发布时，使用此Dockerfile配置“后面的注释展开，上面的全部注释。<br><a href="https://miao.su/image/ftdf5" target="_blank" rel="noopener"><img src="https://miao.su/images/2019/06/09/Dockerfileea151.png" alt="Dockerfileea151.png"></a></p><p>右击SJNScaffolding.RazorPage-&gt;发布-&gt;配置后，如下图所示，点击保存后，生成发布包。</p><p><a href="https://miao.su/image/ftwvM" target="_blank" rel="noopener"><img src="https://miao.su/images/2019/06/09/Deploy-Settingsb6cfb.png" alt="Deploy-Settingsb6cfb.png"></a></p><p>将生成的这个文件夹内容，使用xftp上传至linux的某一文件夹中。</p><p><a href="https://miao.su/image/ftxWU" target="_blank" rel="noopener"><img src="https://miao.su/images/2019/06/09/PXKF63RUOC5L99LPWe1367.png" alt="PXKF63RUOC5L99LPWe1367.png"></a></p><p>具体上传步骤就不说了。</p><p><a href="https://miao.su/image/ftuw8" target="_blank" rel="noopener"><img src="https://miao.su/images/2019/06/09/MYGE3MZ5BNFJQ6R476cf92.png" alt="MYGE3MZ5BNFJQ6R476cf92.png"></a></p><p>前置条件，在ubuntu上安装好了docker。并且正常运行。</p><p><strong>-d</strong> 代表后台运行，此时将对外显露5000端口运行，5000是运行后，docker对外的端口，80是这个服务对外的端口，其中Dockerfile 存在语句EXPOSE 80</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/admin/SJNScaffolding # 先cd的项目目录 </span><br><span class="line">docker build -t igeekfan/sjnscaffolding .     #生成images</span><br><span class="line">docker run -d -p 5000:80 igeekfan/sjnscaffolding  # 生成 container 并运行在5000端口</span><br></pre></td></tr></table></figure><p>此时打开 浏览器， ip+端口5000即可访问服务。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;关于ABP代码 生成器的使用介绍 &lt;a href=&quot;https://blog.csdn.net/q710777720/article/details/91358450&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/q710777720/article/details/91358450&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将自定义-ABP代码生成器，使用. NET Core下的Razor模板引擎，配合RazorPage界面，可自定义cshtml模板，开源地址： &lt;a href=&quot;https://github.com/i542873057/SJNScaffolding&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/i542873057/SJNScaffolding&lt;/a&gt; 部署至ubuntu、Docker的记录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相关技术 .NET Core2.2+Docker+Nginx+Supervisor &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="大后端" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%A4%A7%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Ubuntu" scheme="https://luoyunchong.github.io/hexo-blog/tags/Ubuntu/"/>
    
      <category term="Docker" scheme="https://luoyunchong.github.io/hexo-blog/tags/Docker/"/>
    
      <category term="ASP.NET Core" scheme="https://luoyunchong.github.io/hexo-blog/tags/ASP-NET-Core/"/>
    
  </entry>
  
  <entry>
    <title>日常命令行记录</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/05/15/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%93%E9%A2%98/%E6%97%A5%E5%B8%B8%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%B0%E5%BD%95/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/05/15/命令行专题/日常命令行记录/</id>
    <published>2019-05-15T06:41:21.000Z</published>
    <updated>2019-06-25T06:22:05.379Z</updated>
    
    <content type="html"><![CDATA[<p>windows 查看具体某一端口 是否被占用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;5000&quot;</span><br></pre></td></tr></table></figure><p>npm 包安装，运行项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run serve</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>.ef code first 生成数据库，迁移数据库<br>.net framework  /.net core code first </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Add-Migration &quot;name&quot;</span><br><span class="line">Update-Database </span><br><span class="line">Update-Database  -Force</span><br><span class="line">Update-Database  -Verbose</span><br></pre></td></tr></table></figure><p>dotnet core cil</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet watch run</span><br></pre></td></tr></table></figure><p>windows 运行 打开我的电脑等图标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe shell32.dll,Control_RunDLL desk.cpl,,0</span><br></pre></td></tr></table></figure><p>Mysql下载地址：<a href="https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.25-winx64.zip" target="_blank" rel="noopener">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.25-winx64.zip</a></p><p>windows安装Mysql，并配置密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">运行-》cmd。</span><br><span class="line">首先 cd E:/Program Files/mysql-5.7.25-winx64/bin    </span><br><span class="line">命令：mysqld --initialize   #直接初始化mysql，生成data文件夹中的文件。</span><br><span class="line">命令：mysqld -install          #安装mysql</span><br><span class="line">命令：net start mysql          #启动服务器</span><br><span class="line"></span><br><span class="line">#跳过密码验证，在my.ini文件中配置如下</span><br><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br><span class="line">#cmd运行到mysql/bin目录下</span><br><span class="line">mysql -u root -p</span><br><span class="line">#进入mysql命令行</span><br><span class="line">use mysql;</span><br><span class="line">#执行修改密码操作</span><br><span class="line">update user set authentication_string=password(&apos;123qwe&apos;) where user=&apos;root&apos; and Host = &apos;localhost&apos;;</span><br><span class="line">#刷新数据库</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">net start mysql</span><br><span class="line">net stop mysql</span><br><span class="line"></span><br><span class="line">sc.exe delete &quot;服务名&quot;</span><br></pre></td></tr></table></figure><p>redis 密码配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装目录下的winodws-serve.conf</span><br><span class="line">requirepass 123qwe    #此处注意，行前不能有空格</span><br><span class="line"></span><br><span class="line">重启redis服务、cmd进入安装目录下执行，验证密码是否配置成功</span><br><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379 -a 123qwe</span><br></pre></td></tr></table></figure><p>IDEA 快捷键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Alt+L   格式化代码</span><br><span class="line">Ctrl+Shfit+F 全局查询</span><br></pre></td></tr></table></figure><p>Vscode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALT+SHIFT+F  格式化代码</span><br></pre></td></tr></table></figure><p>Windows server 2016激活</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DISM /online /Set-Edition:ServerDatacenter /ProductKey:CB7KF-BWN84-R7R2Y-793K2-8XDDG /AcceptEula</span><br></pre></td></tr></table></figure><p>idea配置激活地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://idea.merle.com.cn</span><br></pre></td></tr></table></figure><p>VS2019激活码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Visual Studio 2019 Enterprise:BF8Y8-GN2QH-T84XB-QVY3B-RC4DF</span><br><span class="line"></span><br><span class="line">Visual Studio 2019 Professional:NYWVH-HT4XC-R2WYW-9Y3CM-X4V3Y</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      平常使用到的命令行记录
    
    </summary>
    
      <category term="命令行" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="MySQL" scheme="https://luoyunchong.github.io/hexo-blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>博客记录RabbitMQ、Mongodb</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/05/08/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%93%E9%A2%98/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95Rabbitmq%E3%80%81Mongodb/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/05/08/命令行专题/博客记录Rabbitmq、Mongodb/</id>
    <published>2019-05-08T06:41:21.000Z</published>
    <updated>2019-06-25T06:22:05.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Rabbitmq"><a href="#Rabbitmq" class="headerlink" title="Rabbitmq"></a>Rabbitmq</h3><blockquote><p>服务开启后，管理地址：<a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672/</a> </p><ul><li>帐号：guest 密码 : guest</li></ul></blockquote><p>rabbitmq安装后，web管理端口<a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672/</a> 无法访问的解决</p><p>1.<br><a href="https://blog.csdn.net/sxf359/article/details/78239382" target="_blank" rel="noopener">https://blog.csdn.net/sxf359/article/details/78239382</a></p><p>2.<br><img src="https://note.youdao.com/yws/api/personal/file/7FA20220D5454DF9B0788B33E3A41FED?method=download&shareKey=c2e5f279b574304e3bd777a75a4e3045" alt="示例"></p><ol start="3"><li>此命令执行要先定位到rabbitmq的安装目录下的sbin文件夹下。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure></li></ol><h3 id="Mongodb"><a href="#Mongodb" class="headerlink" title="Mongodb"></a>Mongodb</h3><ul><li>删除服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete mongodb</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      RabbitMQ安装后web管理、删除服务Mongodb
    
    </summary>
    
    
      <category term="RabbitMQ" scheme="https://luoyunchong.github.io/hexo-blog/tags/RabbitMQ/"/>
    
      <category term="Mongodb" scheme="https://luoyunchong.github.io/hexo-blog/tags/Mongodb/"/>
    
  </entry>
  
  <entry>
    <title>收集文档</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/03/24/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%93%E9%A2%98/%E6%94%B6%E9%9B%86%E6%96%87%E6%A1%A3/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/03/24/命令行专题/收集文档/</id>
    <published>2019-03-24T06:42:01.000Z</published>
    <updated>2019-06-25T06:44:24.951Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Ubuntu 安装redis两种方式 教程<br><a href="http://www.cnblogs.com/langtianya/p/5187681.html" title="点我搞事情！" target="_blank" rel="noopener">解决方案</a></li><li>在Ubuntu中安装Redis,设置密码，远程访问<br><a href="http://blog.csdn.net/yxwb1253587469/article/details/72466647" target="_blank" rel="noopener">解决方案</a></li><li>关于学习算法的路上，有哪些需要学习的（南阳理工的题目）<br><a href="http://acm.nyist.net/JudgeOnline/step.php" target="_blank" rel="noopener">学习思路</a></li></ul><h1 id="IIS-7-5-部署项目解决问题"><a href="#IIS-7-5-部署项目解决问题" class="headerlink" title="IIS 7.5 部署项目解决问题"></a>IIS 7.5 部署项目解决问题</h1><ul><li>Service Unavailable HTTP Error 503. The service is unavailable<br><a href="http://www.cnblogs.com/fri-yu/p/4078995.html" title="点我搞事情！" target="_blank" rel="noopener">解决方案</a></li><li>出现：发布mvc报错：403.14-Forbidden Web 服务器被配置为不列出此目录的内容<br><a href="http://www.cnblogs.com/youring2/p/3545175.html" title="点我搞事情！" target="_blank" rel="noopener">解决方案</a></li><li>出现.svg .woff .woff2 文件，需要有以下配置 <a href="https://my.oschina.net/u/554046/blog/270689" title="点我搞事情!" target="_blank" rel="noopener">解决方案</a></li><li>不能在此路径中使用此配置节。如果在父级别上锁定了该节,便会出现这种情况 500.19  <a href="http://www.cnblogs.com/cookiebin/p/5911644.html" target="_blank" rel="noopener">解决方案</a></li></ul>]]></content>
    
    <summary type="html">
    
      记录自己的日常问题找到的解决方案
    
    </summary>
    
      <category term="日常问题" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="Ubuntu" scheme="https://luoyunchong.github.io/hexo-blog/tags/Ubuntu/"/>
    
      <category term="Redis" scheme="https://luoyunchong.github.io/hexo-blog/tags/Redis/"/>
    
      <category term="IIS" scheme="https://luoyunchong.github.io/hexo-blog/tags/IIS/"/>
    
  </entry>
  
  <entry>
    <title>ABP使用文档</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/03/12/ABP/ABP%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/03/12/ABP/ABP使用文档/</id>
    <published>2019-03-12T06:40:26.000Z</published>
    <updated>2019-06-25T06:22:05.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体入门与开发原理可参考此地址"><a href="#具体入门与开发原理可参考此地址" class="headerlink" title="具体入门与开发原理可参考此地址"></a>具体入门与开发原理可参考此地址</h2><p><a href="https://blog.csdn.net/wulex/article/category/7256369/3" target="_blank" rel="noopener">https://blog.csdn.net/wulex/article/category/7256369/3</a></p><h2 id="abp入门系列"><a href="#abp入门系列" class="headerlink" title="abp入门系列"></a>abp入门系列</h2><p><a href="https://www.jianshu.com/p/a6e9ace79345" target="_blank" rel="noopener">https://www.jianshu.com/p/a6e9ace79345</a></p><p>我们以通知公告为示例</p><ol><li>首先我们有一个公告信息的表结构，如下，像是否删除、新增时间等七个字段只需要继承FullAuditedEntity类即可</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/2001974-f36d31bc61fb36a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>项目目录位置，在Domain/Plat建立NoticeItems目录，以类+s设置文件夹。</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-0c0a238c497178ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>TelSCode.Domain.Plat.NoticeItems 此命名空间下的类如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">public class NoticeItem : FullAuditedEntity</span><br><span class="line">   &#123;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 公告类别ID</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       [StringLength(50)]</span><br><span class="line">       public string BaseItemId &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 标题</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       [StringLength(100)]</span><br><span class="line">       public string Title &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 内容 </span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public string Content &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       ///  打开次数</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public int Times &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 新增人姓名</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line"></span><br><span class="line">       [StringLength(50)]</span><br><span class="line">       public string CreationUserName &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 部门</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       [StringLength(50)]</span><br><span class="line">       public string DepName &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 是否置顶</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line"></span><br><span class="line">       public bool IsTop &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 置顶时间</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public DateTime? TopTime &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 发布时间</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public DateTime? DeployTime &#123; get; set; &#125;</span><br><span class="line">       public bool IsImg &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 状态</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public string Status &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 图片地址</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public string ImgUrl &#123; get; set; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 附件地址</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public string FileUrl &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 阅读量+1</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public void NewlyTimes()</span><br><span class="line">       &#123;</span><br><span class="line">           this.Times++;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>在此文件夹下把相关权限配置好</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-00a6d4607e89e9fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>具体配置如下</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-310610af5219023f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>数据以树的形式存放，公告信息这个菜单放到基础资料管理下，TypeCode为permission时，在菜单下不展示，是菜单下的权限配置，EnCode不能出现重复值,修改菜单时应在此位置修改对应的文字与排序方式、地址。如果是图标，将不自动更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">new SysMenu &#123;  DisplayName = &quot;公告信息管理&quot;, Icon = &quot;icon-standard-date-add&quot;, EnCode = &quot;Plat.NoticeItem&quot;, LinkUrl = &quot;/Plat/NoticeItem/Index&quot;, TypeCode = menu, SortCode = 20 ,</span><br><span class="line">Childrens = new List&lt;SysMenu&gt;()</span><br><span class="line">&#123;</span><br><span class="line">new SysMenu &#123; DisplayName = &quot;新增公告&quot;, EnCode = &quot;Plat.NoticeItem.Add&quot;, TypeCode = permission, SortCode = 1 &#125;,</span><br><span class="line">    new SysMenu &#123; DisplayName = &quot;编辑公告&quot;, EnCode = &quot;Plat.NoticeItem.Edit&quot;, TypeCode = permission, SortCode = 2&#125;,</span><br><span class="line">    new SysMenu &#123; DisplayName = &quot;删除公告&quot;, EnCode = &quot;Plat.NoticeItem.Delete&quot;, TypeCode = permission, SortCode = 3 &#125;,</span><br><span class="line">    new SysMenu &#123; DisplayName = &quot;公告列表&quot;, EnCode = &quot;Plat.NoticeItem.GetGrid&quot;, TypeCode = permission, SortCode = 4 &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在EntityFramework的TelSCodeDbContext中增加一行 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public virtual IDbSet&lt;NoticeItem&gt; NoticeItem &#123; get; set; &#125;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2001974-67a14080bf65ca46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在Application的Plat区域增加NoticeItems文件夹，我们以类名后缀加s建立文件夹，</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-d8352c0d3dcaff33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>NoticeItemInput.cs文件夹，一般情况下只需要将NoticeItem中的字段复制过来即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[AutoMap(typeof(NoticeItem))]</span><br><span class="line"> public class NoticeItemInput : EntityDto</span><br><span class="line"> &#123;</span><br><span class="line">     public string BaseItemId &#123; get; set; &#125;</span><br><span class="line">     [StringLength(100,ErrorMessage = &quot;标题仅限100个字符&quot;)]</span><br><span class="line">     public string Title &#123; get; set; &#125;</span><br><span class="line">     public string Content &#123; get; set; &#125;</span><br><span class="line">     public int Times &#123; get; set; &#125;</span><br><span class="line">     public string CreationUserName &#123; get; set; &#125;</span><br><span class="line">     public string DepName &#123; get; set; &#125;</span><br><span class="line">     public bool IsTop &#123; get; set; &#125;</span><br><span class="line">     public bool IsImg &#123; get; set; &#125;</span><br><span class="line">     public string Status &#123; get; set; &#125;</span><br><span class="line">     public string ImgUrl &#123; get; set; &#125;</span><br><span class="line">     public string FileUrl &#123; get; set; &#125;</span><br><span class="line">     public DateTime? TopTime &#123; get; set; &#125;</span><br><span class="line">     public DateTime? DeployTime &#123; get; set; &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>NoticeItemListDto 为列表上展示的数据字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[AutoMapFrom(typeof(NoticeItem))]</span><br><span class="line">public class NoticeItemListDto : EntityDto, IHasCreationTime</span><br><span class="line">&#123;</span><br><span class="line">    public string BaseItemId &#123; get; set; &#125;</span><br><span class="line">    public string Title &#123; get; set; &#125;</span><br><span class="line">    public string Content &#123; get; set; &#125;</span><br><span class="line">    public int Times &#123; get; set; &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 回复次数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public int CommentTimes &#123; get; set; &#125;</span><br><span class="line">    public string CreationUserName &#123; get; set; &#125;</span><br><span class="line">    public DateTime CreationTime &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public DateTime? DeployTime &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public bool IsTop &#123; get; set; &#125;</span><br><span class="line">    public string StatusCode &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NoticeItemSearchDto为查询条件，继承PageDto即可，需要增加查询条件，则在此类中增加对应的属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class NoticeItemSearchDto : PageDto</span><br><span class="line">&#123;</span><br><span class="line">    public string BaseItemEnCode &#123; get; set; &#125;</span><br><span class="line">    public string Title &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>INoticeItemAppService .cs文件 夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public interface INoticeItemAppService : IUsualCrudAppService&lt;NoticeItemInput, NoticeItemSearchDto, NoticeItemInput, int&gt;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NoticeItemAppService.cs文件，一般情况下，此类继承UsualCrudAppService，继承接口INoticeItemAppService，即可拥有增、删、改、查的功能，如果想自定义查询实现，需要重写父类的CreateFilteredQuery方法，由于公告信息中业务要求，有置顶和置顶时间字段，需要根据最后置顶的时间倒序取数据，所以GetGridByCondition方法需要override下，即可解决，权限配置包括二部分，一种是给父类继承的UsualCurdAppService传相应的权限编码，分别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">base.DeletePermissionName=&quot;Plat.NoticeItem.Delete&quot;;</span><br><span class="line"> base.CreatePermissionName = &quot;Plat.NoticeItem.Add&quot;;</span><br><span class="line">base.UpdatePermissionName = &quot;Plat.NoticeItem.Edit&quot;;</span><br></pre></td></tr></table></figure><p>在方法名上使用此权限属性配置该方法对应的权限信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[AbpAuthorize(&quot;Plat.NoticeItem.GetGrid&quot;)]</span><br></pre></td></tr></table></figure><p>调用 base.CreateOrUpdate方法时，即会判断用户是否有Plat.NoticeItem.Add权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public class NoticeItemAppService : UsualCrudAppService&lt;NoticeItem, NoticeItemInput, NoticeItemSearchDto, NoticeItemInput, int&gt;, INoticeItemAppService</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">      #region 构造函数</span><br><span class="line">      private readonly IRepository&lt;NoticeItem&gt; _noticeItemRepository;</span><br><span class="line">      private RoleManager RoleManager;</span><br><span class="line">      private readonly ISqlExecuter _iSqlExecuter;</span><br><span class="line">      public NoticeItemAppService(IRepository&lt;NoticeItem&gt; noticeItemRepository, ISqlExecuter iSqlExecuter, RoleManager roleManager) : base(noticeItemRepository)</span><br><span class="line">      &#123;</span><br><span class="line">          this._noticeItemRepository = noticeItemRepository;</span><br><span class="line">          _iSqlExecuter = iSqlExecuter;</span><br><span class="line">          RoleManager = roleManager;</span><br><span class="line">          base.DeletePermissionName = &quot;Plat.NoticeItem.Delete&quot;;</span><br><span class="line">          base.CreatePermissionName = &quot;Plat.NoticeItem.Add&quot;;</span><br><span class="line">          base.UpdatePermissionName = &quot;Plat.NoticeItem.Edit&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">      #endregion</span><br><span class="line"></span><br><span class="line">      public override async Task CreateOrUpdate(NoticeItemInput input)</span><br><span class="line">      &#123;</span><br><span class="line">          if (input.IsTop)</span><br><span class="line">          &#123;</span><br><span class="line">              input.TopTime = DateTime.Now;</span><br><span class="line">          &#125;</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">              input.TopTime = null;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          if (input.Status == StatusCode.Submit.ToString())</span><br><span class="line">          &#123;</span><br><span class="line">              input.DeployTime = DateTime.Now;</span><br><span class="line">          &#125;</span><br><span class="line">          await base.CreateOrUpdate(input);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      protected override IQueryable&lt;NoticeItem&gt; CreateFilteredQuery(NoticeItemSearchDto input)</span><br><span class="line">      &#123;</span><br><span class="line">          return base.CreateFilteredQuery(input)</span><br><span class="line">              .WhereIf(!string.IsNullOrWhiteSpace(input.Title), m =&gt; m.Title.Contains(input.Title));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      [AbpAuthorize(&quot;Plat.NoticeItem.GetGrid&quot;)]</span><br><span class="line">      public override EasyUiListResultDto&lt;NoticeItemInput&gt; GetGridByCondition(NoticeItemSearchDto input)</span><br><span class="line">      &#123;</span><br><span class="line">          var rows = this.CreateFilteredQuery(input).OrderBy(r =&gt; r.IsTop).PageEasyUiBy(input).OrderByDescending(r =&gt; r.TopTime).MapTo&lt;List&lt;NoticeItemInput&gt;&gt;();</span><br><span class="line"></span><br><span class="line">          return new EasyUiListResultDto&lt;NoticeItemInput&gt;(input.Total, rows);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>NoticeItemController.cs 此类注入IAbpFileManager 去解析保存的文件，供前台编辑页面时使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class NoticeItemController : TelSCodeControllerBase</span><br><span class="line">&#123;</span><br><span class="line">    #region 构造函数</span><br><span class="line">    private readonly INoticeItemAppService _noticeitemAppService;</span><br><span class="line">    private readonly IAbpFileManager _abpFileManager;</span><br><span class="line">    public NoticeItemController(INoticeItemAppService noticeitemAppService, IAbpFileManager abpFileManager)</span><br><span class="line">    &#123;</span><br><span class="line">        this._abpFileManager = abpFileManager;</span><br><span class="line">        this._noticeitemAppService = noticeitemAppService;</span><br><span class="line">    &#125;</span><br><span class="line">    #endregion</span><br><span class="line"></span><br><span class="line">    #region 视图</span><br><span class="line">    public ActionResult Index()</span><br><span class="line">    &#123;</span><br><span class="line">        return View();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [AbpMvcAuthorize(&quot;Plat.NoticeItem.Add&quot;, &quot;Plat.NoticeItem.Edit&quot;)]</span><br><span class="line">    public ActionResult CreateOrUpdateModal()</span><br><span class="line">    &#123;</span><br><span class="line">        return View();</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    #region 数据</span><br><span class="line">    public async Task&lt;JsonResult&gt; GetInfoForEdit(int id)</span><br><span class="line">    &#123;</span><br><span class="line">        var output = await _noticeitemAppService.GetInfoForEdit(id);</span><br><span class="line"></span><br><span class="line">        if (id == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            output.CreationUserName = AbpSession.GetLoginName();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        NoticeItemViewModel noticeItemViewModel = new NoticeItemViewModel(</span><br><span class="line">              _abpFileManager.GetFileOutput(output.FileUrl),</span><br><span class="line">              _abpFileManager.GetFileOutput(output.ImgUrl),</span><br><span class="line">              output</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">        return Json(noticeItemViewModel);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [AbpMvcAuthorize(&quot;Plat.NoticeItem.GetGrid&quot;)]</span><br><span class="line">    public JsonResult GetGridByCondition(NoticeItemSearchDto input)</span><br><span class="line">    &#123;</span><br><span class="line">        var gridData = _noticeitemAppService.GetGridByCondition(input);</span><br><span class="line">        return Json(gridData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>公告信息因为有文件上传，所以需要新建一个NoticeItemViewModel 类<br>在TelSCode.Web中Plat区域Models新建文件夹NoticeItems，新建类NoticeItemViewModel.cs</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-c99897c2255cd117.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[AutoMapFrom(typeof(NoticeItemInput))]</span><br><span class="line"> public class NoticeItemViewModel : NoticeItemInput</span><br><span class="line"> &#123;</span><br><span class="line">     public List&lt;AbpFileOutput&gt; AbpFileOutput &#123; get; set; &#125;</span><br><span class="line">     public List&lt;AbpFileOutput&gt; AbpImgFileOutput &#123; get; set; &#125;</span><br><span class="line">     public NoticeItemViewModel(List&lt;AbpFileOutput&gt; fileUrlOutputs, List&lt;AbpFileOutput&gt; imgFileUrlOutputs, NoticeItemInput noticeItemInput)</span><br><span class="line">     &#123;</span><br><span class="line">         AbpFileOutput = fileUrlOutputs;</span><br><span class="line">         AbpImgFileOutput = imgFileUrlOutputs;</span><br><span class="line"></span><br><span class="line">         noticeItemInput.MapTo(this);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>接下来是界面，新增编辑在一个界面中，一个页面对应一个js，使用@Html.InCludeScript引用，不会有缓存问题，发布之后会生成版本号。</p><p><img src="https://upload-images.jianshu.io/upload_images/2001974-4934ca2974d14475.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>Index.cshtml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">@using Abp.Web.Mvc.Extensions</span><br><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = &quot;通知公告&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@section scripts&#123;</span><br><span class="line">    @Html.IncludeScript(&quot;~/bower_components/webuploader/webuploader.min.js&quot;)</span><br><span class="line">    @Html.IncludeScript(&quot;~/bower_components/staticfile/libs/abp.webuploader.js&quot;)</span><br><span class="line">    @Html.IncludeScript(&quot;~/bower_components/wangEditor/wangEditor.min.js&quot;)</span><br><span class="line">    @Html.IncludeScript(&quot;~/bower_components/wangEditor/wangEditor-plugin.js&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var gridUI = gridUI ||</span><br><span class="line">            &#123;</span><br><span class="line">                BaseItemEnCode: $.util.request[&apos;name&apos;] == undefined ? &quot;&quot; : $.util.request[&apos;name&apos;]</span><br><span class="line">            &#125;;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    @Html.IncludeScript(&quot;~/Areas/Plat/Views/NoticeItem/Index.js&quot;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@section styles&#123;</span><br><span class="line">    &lt;link href=&quot;~/bower_components/webuploader/webuploader.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">    &lt;link href=&quot;~/bower_components/wangEditor/wangEditor-plugin.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">    @Html.IncludeStyle(&quot;~/Areas/Plat/Views/NoticeItem/Index.js&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;easyui-layout&quot; data-options=&quot;fit:true&quot;&gt;</span><br><span class="line">    &lt;div data-options=&quot;region:&apos;north&apos;,border:false&quot; style=&quot;height: 54px; overflow: hidden;&quot;&gt;</span><br><span class="line">        &lt;form id=&quot;searchForm&quot;&gt;</span><br><span class="line">            &lt;table class=&quot;kv-table no-border&quot;&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;th class=&quot;kv-label&quot; style=&quot;text-align:center&quot;&gt;标题&lt;/th&gt;</span><br><span class="line">                    &lt;td class=&quot;kv-content&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;Title&quot; id=&quot;Title&quot; class=&quot;easyui-textbox&quot; /&gt;</span><br><span class="line">                        &lt;a href=&quot;javascript:void(0);&quot; class=&quot;easyui-linkbutton&quot; data-options=&quot;iconCls:&apos;icon-search&apos;&quot; onclick=&quot;com.filter(&apos;#searchForm&apos;, &apos;#dgGrid&apos;);&quot;&gt;查询&lt;/a&gt;</span><br><span class="line">                        &lt;a href=&quot;javascript:void(0);&quot; class=&quot;easyui-linkbutton&quot; data-options=&quot;iconCls:&apos;icon-undo&apos;&quot; onclick=&quot;com.clear(&apos;#searchForm&apos;, &apos;#dgGrid&apos;)&quot;&gt;清空&lt;/a&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/table&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div data-options=&quot;region:&apos;center&apos;,border:false&quot;&gt;</span><br><span class="line">        &lt;table id=&quot;dgGrid&quot;&gt;&lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>同目录下建一个Index.js ，我们使用闭包的形式来组织代码结构，将可配置项放在了上面，不强制要求，这里只为方便修改。使用时，将NoticeItem替换相应的类名，noticeServcice替换成相应的xxxservcie。abp.services.app.noticeItem中的noticeItem中n是首字母变成小写，这是后台生成的service，要按照此规定使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">var gridUI = gridUI || &#123;&#125;;</span><br><span class="line">(function () &#123;</span><br><span class="line">    var noticeService = abp.services.app.noticeItem;</span><br><span class="line">    var gridUrl = &apos;/Plat/NoticeItem/GetGridByCondition?BaseItemEnCode=&apos; + gridUI.BaseItemEnCode;</span><br><span class="line">    var editModalUrl = &apos;/Plat/NoticeItem/CreateOrUpdateModal&apos;;</span><br><span class="line">    var readModalUrl = &apos;/Plat/NoticeItem/ReadModal&apos;;</span><br><span class="line">    var dgGrid, dgGridId = &quot;#dgGrid&quot;;</span><br><span class="line"></span><br><span class="line">    $.extend(gridUI,</span><br><span class="line">        &#123;</span><br><span class="line">            loadGrid: function () &#123;</span><br><span class="line">                var baseEnCode = &apos;Plat.NoticeItem.&apos;;</span><br><span class="line"></span><br><span class="line">                var toolbar = [&#123; text: &quot;刷新&quot;, iconCls: &quot;icon-reload&quot;, handler: function () &#123; com.btnRefresh(dgGridId); &#125; &#125;,</span><br><span class="line">                &#123; text: &quot;新增&quot;, EnCode: baseEnCode + &apos;Add&apos;, iconCls: &quot;icon-add&quot;, handler: gridUI.btnAdd &#125;,</span><br><span class="line">                &#123; text: &quot;编辑&quot;, EnCode: baseEnCode + &apos;Edit&apos;, iconCls: &quot;icon-edit&quot;, handler: gridUI.btnEdit &#125;,</span><br><span class="line">                &#123; text: &quot;删除&quot;, EnCode: baseEnCode + &apos;Delete&apos;, iconCls: &quot;icon-remove&quot;, handler: gridUI.btnDelete &#125;];</span><br><span class="line">                toolbar = com.authorizeButton(toolbar);</span><br><span class="line">                if (gridUI.BaseItemEnCode != &quot;&quot;) &#123;</span><br><span class="line">                    toolbar = [];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                dgGrid = $(dgGridId).datagrid(&#123;</span><br><span class="line">                    url: gridUrl,</span><br><span class="line">                    toolbar: toolbar,</span><br><span class="line">                    columns: [[</span><br><span class="line">                        &#123;</span><br><span class="line">                            field: &apos;Id&apos;, title: &apos;查看&apos;, width: 20, align: &apos;center&apos;, formatter: function (value, row) &#123;</span><br><span class="line">                                return String.format(&apos;&lt;button class=&quot;btn btn-default btn-xs&quot; type=&quot;button&quot; onclick=&quot;gridUI.showDetails(\&apos;&#123;0&#125;\&apos;)&quot;&gt;&lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;&lt;/button&gt;&apos;, value);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123; field: &apos;Title&apos;, title: &apos;标题&apos;, width: 80 &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            field: &apos;BaseItemId&apos;, title: &apos;类别&apos;, width: 80, formatter: function (value) &#123;</span><br><span class="line">                                if (top.clients.dataItems[&apos;NoticeItem&apos;]) &#123;</span><br><span class="line">                                    return top.clients.dataItems[&apos;NoticeItem&apos;][value];</span><br><span class="line">                                &#125; else &#123;</span><br><span class="line">                                    return &apos;&apos;;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123; field: &apos;CreationUserName&apos;, title: &apos;发布人姓名&apos;, width: 160 &#125;,</span><br><span class="line">                        &#123; field: &apos;IsTop&apos;, title: &apos;是否置顶&apos;, width: 50, formatter: com.formatYes &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            field: &apos;Status&apos;, title: &apos;状态&apos;, width: 50, formatter: function (value) &#123;</span><br><span class="line">                                var objMsg = &#123;</span><br><span class="line">                                    &quot;primary&quot;: &#123;</span><br><span class="line">                                        text: &quot;发布&quot;,</span><br><span class="line">                                        &apos;case&apos;: [&apos;Submit&apos;]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &quot;info&quot;: &#123;</span><br><span class="line">                                        text: &quot;暂存&quot;,</span><br><span class="line">                                        &apos;case&apos;: [&apos;TempSave&apos;]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;;</span><br><span class="line">                                return com.formatMsg(value, objMsg);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]]</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            editInfo: function (title, icon, id) &#123;</span><br><span class="line">                var pDialog = com.dialog(&#123;</span><br><span class="line">                    title: title,</span><br><span class="line">                    width: &apos;100%&apos;,</span><br><span class="line">                    height: &apos;100%&apos;,</span><br><span class="line">                    href: editModalUrl,</span><br><span class="line">                    iconCls: icon,</span><br><span class="line">                    buttons: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            text: &apos;发布&apos;,</span><br><span class="line">                            iconCls: &apos;icon-ok&apos;,</span><br><span class="line">                            handler: function () &#123;</span><br><span class="line">                                gridUI.submit(pDialog, &quot;Submit&quot;);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;, &#123;</span><br><span class="line">                            text: &apos;暂存&apos;,</span><br><span class="line">                            iconCls: &apos;icon-save&apos;,</span><br><span class="line">                            handler: function () &#123;</span><br><span class="line">                                gridUI.submit(pDialog, &quot;TempSave&quot;);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    onLoad: function () &#123;</span><br><span class="line">                        editUI.setForm(id);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            showDetails: function (id) &#123;</span><br><span class="line">                com.dialog(&#123;</span><br><span class="line">                    title: &quot;详情&quot;,</span><br><span class="line">                    width: 1500,</span><br><span class="line">                    height: 800,</span><br><span class="line">                    href: readModalUrl,</span><br><span class="line">                    queryParams: &#123;</span><br><span class="line">                        id: id</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            btnAdd: function () &#123;</span><br><span class="line">                gridUI.editInfo(&apos;新增公告&apos;, &apos;icon-add&apos;);</span><br><span class="line">            &#125;,</span><br><span class="line">            btnEdit: function () &#123;</span><br><span class="line">                com.edit(dgGridId, function (id) &#123;</span><br><span class="line">                    gridUI.editInfo(&quot;编辑公告&quot;, &apos;icon-edit&apos;, id);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            btnDelete: function () &#123;</span><br><span class="line">                com.deleted(noticeService, dgGridId);</span><br><span class="line">            &#125;,</span><br><span class="line">            submit: function (pDialog, status) &#123;</span><br><span class="line">                var f = $(&quot;#editForm&quot;);</span><br><span class="line">                var isValid = f.form(&apos;validate&apos;);</span><br><span class="line">                if (!isValid) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var objForm = f.formSerialize();</span><br><span class="line">                objForm.Content = editor.txt.html();</span><br><span class="line">                objForm.Status = status;</span><br><span class="line"></span><br><span class="line">                com.setBusy(pDialog, true);</span><br><span class="line">                noticeService.createOrUpdate(objForm, &#123; showMsg: true &#125;)</span><br><span class="line">                    .done(function () &#123;</span><br><span class="line">                        com.btnRefresh();</span><br><span class="line">                        pDialog.dialog(&apos;close&apos;);</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .always(function () &#123;</span><br><span class="line">                        com.setBusy(pDialog, false);</span><br><span class="line">                    &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    $(function () &#123;</span><br><span class="line">        gridUI.loadGrid();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>CreateOrUpdate.cshtml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">@using Abp.Web.Mvc.Extensions</span><br><span class="line">@&#123;</span><br><span class="line">    Layout = null;</span><br><span class="line">    ViewBag.Title = &quot;通知公告管理&quot;;</span><br><span class="line">&#125;</span><br><span class="line">@Html.IncludeScript(&quot;/Areas/Plat/Views/NoticeItem/CreateOrUpdateModal.js&quot;)</span><br><span class="line">&lt;div class=&quot;layui-layer-content&quot;&gt;</span><br><span class="line">    &lt;form id=&quot;editForm&quot;&gt;</span><br><span class="line">        &lt;table class=&quot;kv-table&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th class=&quot;kv-label&quot;&gt;&lt;span class=&quot;red&quot;&gt;*&lt;/span&gt;标题&lt;/th&gt;</span><br><span class="line">                &lt;td class=&quot;kv-content&quot; colspan=&quot;3&quot;&gt;</span><br><span class="line">                    &lt;input id=&quot;Title&quot; name=&quot;Title&quot; type=&quot;text&quot; class=&quot;easyui-textbox&quot; data-options=&quot;required:true&quot; style=&quot;width:569px&quot; /&gt;</span><br><span class="line">                    &lt;input id=&quot;Id&quot; name=&quot;Id&quot; type=&quot;hidden&quot; /&gt;</span><br><span class="line">                    &lt;input type=&quot;hidden&quot; id=&quot;CreationUserName&quot; name=&quot;CreationUserName&quot; /&gt;</span><br><span class="line">                    &lt;input type=&quot;hidden&quot; name=&quot;BaseItemCode&quot; value=&quot;&quot; /&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th class=&quot;kv-label&quot;&gt;置顶&lt;/th&gt;</span><br><span class="line">                &lt;td class=&quot;kv-content&quot; style=&quot;width:215px&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;IsTop&quot; id=&quot;IsTop&quot; class=&quot;easyui-switchbutton&quot;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;th class=&quot;kv-label&quot;&gt;公告类别&lt;/th&gt;</span><br><span class="line">                &lt;td class=&quot;kv-content&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;BaseItemId&quot; id=&quot;BaseItemId&quot; /&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;附件&lt;/th&gt;</span><br><span class="line">                &lt;td colspan=&quot;3&quot;&gt;</span><br><span class="line">                    &lt;div id=&quot;fileUrl&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            @*&lt;tr&gt;</span><br><span class="line">                    &lt;th class=&quot;kv-label&quot;&gt;是否图片新闻&lt;/th&gt;</span><br><span class="line">                    &lt;td class=&quot;kv-content&quot; colspan=&quot;3&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;IsImg&quot; id=&quot;IsImg&quot; class=&quot;easyui-switchbutton&quot;&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;*@</span><br><span class="line">            &lt;tr id=&quot;IsImgNews&quot;&gt;</span><br><span class="line">                &lt;th&gt;上传图片&lt;/th&gt;</span><br><span class="line">                &lt;td colspan=&quot;3&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;IsImg&quot; id=&quot;IsImg&quot; type=&quot;hidden&quot; value=&quot;true&quot;&gt;</span><br><span class="line">                    &lt;div id=&quot;imgUrl&quot; style=&quot;position: relative;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th class=&quot;kv-label&quot;&gt;内容&lt;/th&gt;</span><br><span class="line">                &lt;td class=&quot;kv-content&quot; colspan=&quot;3&quot;&gt;</span><br><span class="line">                    &lt;div id=&quot;Content&quot; style=&quot;position: relative;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>CreateOrUpdate.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">var Img;</span><br><span class="line">var editor;</span><br><span class="line">var editUI = &#123;</span><br><span class="line">    setForm: function (id) &#123;</span><br><span class="line"></span><br><span class="line">        var E = window.wangEditor;</span><br><span class="line">        editor = new E(&apos;#Content&apos;);</span><br><span class="line">        editor.customConfig = com.editor.customConfig;</span><br><span class="line">        editor.create();</span><br><span class="line">        E.plugins.init(&#123;</span><br><span class="line">            elem: &apos;#Content&apos;,</span><br><span class="line">            plugins: [&apos;fullscreen&apos;]</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //实例化文件上传</span><br><span class="line">        $(&quot;#imgUrl&quot;).powerWebUpload(&#123;</span><br><span class="line">            uploadType: &apos;img&apos;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(&quot;#fileUrl&quot;).powerWebUpload();</span><br><span class="line"></span><br><span class="line">        $(&apos;#BaseItemId&apos;).combobox(&#123;</span><br><span class="line">            url: com.baseUrl + &apos;/baseItem/GetComBoJson?enCode=NoticeItem&apos;,</span><br><span class="line">            required: true,</span><br><span class="line">            validType: &quot;comboxValidate[&apos;请选择公告类别&apos;]&quot;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        //function changeIsImg(checked) &#123;</span><br><span class="line">        //    if (checked) &#123;</span><br><span class="line">        //        $(&apos;#IsImgNews&apos;).css(&apos;display&apos;, &apos;&apos;);</span><br><span class="line">        //    &#125; else &#123;</span><br><span class="line">        //        $(&apos;#IsImgNews&apos;).css(&apos;display&apos;, &apos;none&apos;);</span><br><span class="line">        //    &#125;</span><br><span class="line">        //&#125;</span><br><span class="line"></span><br><span class="line">        //$(&apos;#IsImg&apos;).switchbutton(&#123;</span><br><span class="line">        //    onChange: function (checked) &#123;</span><br><span class="line">        //        changeIsImg(checked);</span><br><span class="line">        //    &#125;</span><br><span class="line">        //&#125;);</span><br><span class="line"></span><br><span class="line">        com.setForm(id, function (data) &#123;</span><br><span class="line">            var f = $(&quot;#editForm&quot;);</span><br><span class="line">            if (id) &#123;</span><br><span class="line">                setTimeout(function () &#123;</span><br><span class="line">                    editor.txt.html(data.Content);</span><br><span class="line">                &#125;, 666);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            webuploader.loadFile(&#123;</span><br><span class="line">                elem: &apos;#imgUrl&apos;,</span><br><span class="line">                rows: data.AbpImgFileOutput</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            webuploader.loadFile(&#123;</span><br><span class="line">                elem: &apos;#fileUrl&apos;,</span><br><span class="line">                rows: data.AbpFileOutput</span><br><span class="line">            &#125;);</span><br><span class="line">            com.loadSwithButton($(&apos;.layui-layer-content&apos;), data);</span><br><span class="line">            //changeIsImg(data.IsImg);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      旧项目使用ABP框架时，.NET Framework下通用文档，最基础的类，服务，接口等。
    
    </summary>
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/categories/ABP/"/>
    
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/tags/ABP/"/>
    
  </entry>
  
  <entry>
    <title>ABP源码解析</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2019/01/09/ABP/ABP%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2019/01/09/ABP/ABP源码解析/</id>
    <published>2019-01-09T06:40:26.000Z</published>
    <updated>2019-06-25T06:22:05.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2-Abp简介"><a href="#2-Abp简介" class="headerlink" title="2.Abp简介"></a>2.Abp简介</h2><blockquote><p><strong>ABP是“ASP.NET Boilerplate Project (ASP.NET样板项目)”的简称。</strong><br>ASP.NET Boilerplate是一个用最佳实践和流行技术开发现代WEB应用程序的新起点，它旨在成为一个通用的WEB应用程序框架和项目模板。</p></blockquote><p><strong>框架</strong><br>ABP是基于最新的ASP.NET CORE，ASP.NET MVC和Web API技术的应用程序框架。并使用流行的框架和库，它提供了便于使用的授权，依赖注入，验证，异常处理，本地化，日志记录，缓存等常用功能。</p><p><strong>架构</strong><br>ABP实现了多层架构（领域层，应用层，基础设施层和表示层），以及领域驱动设计（实体，存储库，领域服务，应用程序服务，DTO等）。还实现和提供了良好的基础设施来实现最佳实践，如依赖注入。</p><p><strong>模板</strong><br>ABP轻松地为您的项目创建启动模板。它默认包括最常用的框架和库。还允许您选择单页（Angularjs）或多页架构，EntityFramework或NHibernate作为ORM。<br>访问官网，了解更多。</p><p><img src="http://upload-images.jianshu.io/upload_images/2799767-02ef1335c8674fd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="image"><br><img src="http://upload-images.jianshu.io/upload_images/2799767-4b13da08e87060d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="image"></p><ul><li>用户接口层（Presentation）：提供一个界面，实现用户交互操作。</li><li>应用 层（Application):进行展现层与领域层之间的协调，协调业务对象来执行特定的应用 程序的任务。不包含业务逻辑。</li><li>领域层（Domain)：包括业务对象和业务规则，这是应用程序的核心层。</li><li>基础设计层：（Infrastructure）:提供通用技术来支持更高的层。仓储可通过ORM来实现数据库的交互</li></ul><blockquote><p>ABP基础原则：</p></blockquote><pre><code>应用层不包含业务逻辑领域服务处理业务逻辑应用服务(AppLIcationService)VS领域服务（Manager)</code></pre><blockquote><p>在什么情况下应使用领域服务</p></blockquote><pre><code>执行某个具体的业务操作。领域对象的转换以多个领域对象为输入，返回一个值对象</code></pre><ul><li><a href="https://www.cnblogs.com/sheng-jie/p/6943213.html" target="_blank" rel="noopener">参考此文档</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/2799767-550ec13d4df50f8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><blockquote><p>总结：</p><ol><li>领域服务和应用服务的区别在于只有领域服务才处理业务逻辑。应用服务作为领域服务的消费方，是很薄的一层。</li><li>过度使用领域服务会导致贫血领域模型（即所有的业务逻辑都位于领域服务中，而不是实体和值对象中）。</li></ol></blockquote><h3 id="领域服务（Domain-Service）"><a href="#领域服务（Domain-Service）" class="headerlink" title="领域服务（Domain Service）"></a>领域服务（Domain Service）</h3><blockquote><p>摘要： 当处理的业务规则跨越两个（及以上）实体时，应该写在 领域服务方法里</p></blockquote><h3 id="领域事件-Domain-Event"><a href="#领域事件-Domain-Event" class="headerlink" title="领域事件 (Domain Event)"></a>领域事件 (Domain Event)</h3><blockquote><p>领域事件用来定义特定于领域的事件，领域服务与实体一起实现了不属于单个实体的业务规则</p></blockquote>]]></content>
    
    <summary type="html">
    
      旧项目使用ABP框架时，对基础的ABP源码、框架、架构的简单介绍
    
    </summary>
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/categories/ABP/"/>
    
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/tags/ABP/"/>
    
  </entry>
  
  <entry>
    <title>工作内容Rshiny框架使用</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2018/12/26/%E5%A4%A7%E5%90%8E%E7%AB%AF/%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9Rshiny%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2018/12/26/大后端/工作内容Rshiny框架使用/</id>
    <published>2018-12-25T16:56:03.000Z</published>
    <updated>2019-06-25T06:22:05.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shiny-Server学习记录-网络计算"><a href="#shiny-Server学习记录-网络计算" class="headerlink" title="shiny Server学习记录-网络计算"></a>shiny Server学习记录-网络计算</h2><ul><li><a href="http://218.94.144.229:8098/NetworkEntropy/" target="_blank" rel="noopener">http://218.94.144.229:8098/NetworkEntropy/</a>  用户名 admin 密码 123qwe</li><li>shiny api文档<a href="http://shiny.rstudio.com/reference/shiny/latest/" target="_blank" rel="noopener">http://shiny.rstudio.com/reference/shiny/latest/</a></li><li>shiny github <a href="https://github.com/rstudio/shiny" target="_blank" rel="noopener">https://github.com/rstudio/shiny</a></li><li>Shiny Server配置 <a href="https://blog.csdn.net/wendaomudong_l2d4/article/details/75105440" target="_blank" rel="noopener">https://blog.csdn.net/wendaomudong_l2d4/article/details/75105440</a></li><li>R shiny基础教程 <a href="https://blog.csdn.net/u014801157/article/category/5690387" target="_blank" rel="noopener">https://blog.csdn.net/u014801157/article/category/5690387</a></li><li>windows下无法正常安装某个类库时,Windows 下R软件如何安装GO.db程序包<a href="https://blog.csdn.net/hhl_csdn/article/details/51933673?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">https://blog.csdn.net/hhl_csdn/article/details/51933673?tdsourcetag=s_pctim_aiomsg</a></li></ul><ul><li>内网是在浏览器下输入 http://:3838/APP_NAME/即可 </li></ul><p>一些重要的命令</p><h3 id="先复制shiny包自带样例到目录下"><a href="#先复制shiny包自带样例到目录下" class="headerlink" title="先复制shiny包自带样例到目录下"></a>先复制shiny包自带样例到目录下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /usr/lib64/R/library/shiny/examples/* /srv/shiny-server/</span><br></pre></td></tr></table></figure><p>shiny server 服务设置状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查看状态</span><br><span class="line">sudo systemctl status shiny-server</span><br><span class="line">#开启</span><br><span class="line">sudo systemctl start shiny-server</span><br><span class="line">#停止</span><br><span class="line">sudo systemctl stop shiny-server</span><br><span class="line">#重启</span><br><span class="line">sudo systemctl restart shiny-server</span><br></pre></td></tr></table></figure><p>1) 配置文件位置：/etc/shiny-server/shiny-server.conf<br>2) 报错时查看日志[服务器运行日志]<br>/var/log/shiny-server.log<br>3) shiny运行日志[类似R的运行日志]<br>/var/log/shiny-server</p><p><strong>当无法安装某些包时可使用下面的代码进行安装</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;包名&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>R 3.3.3  R语言执行需要安装的程序包</p><p>以管理员权限运行Rgui,并指定包安装的位置，防止安装到其他目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.libPaths(<span class="string">"C:/Program Files/R/R-3.3.3/library"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">install.packages(&apos;pillar&apos;)</span><br><span class="line"></span><br><span class="line">install.packages(&quot;ClustOfVar&quot;)</span><br><span class="line">install.packages(&quot;psych&quot;)</span><br><span class="line">install.packages(&quot;GPArotation&quot;)</span><br><span class="line">install.packages(&quot;stringr&quot;)</span><br><span class="line">install.packages(&quot;readxl&quot;)</span><br><span class="line">install.packages(&quot;ca&quot;)</span><br><span class="line">## 这个包可能也不正常</span><br><span class="line">install.packages(&quot;arulesViz&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 这些包无法正常安装</span><br><span class="line">install.packages(&quot;arules&quot;) </span><br><span class="line">install.packages(&quot;lavaan&quot;)</span><br></pre></td></tr></table></figure><h3 id="中医网络分析模块"><a href="#中医网络分析模块" class="headerlink" title="中医网络分析模块"></a>中医网络分析模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">biocLite(&apos;GO.db&apos;)</span><br><span class="line">biocLite(&apos;org.Hs.eg.db&apos;)</span><br><span class="line">biocLite(&apos;clusterProfiler&apos;)</span><br><span class="line"></span><br><span class="line">biocLite(&apos;WGCNA&apos;)</span><br><span class="line"></span><br><span class="line">intsall.packages(&apos;WGCNA&apos;)</span><br></pre></td></tr></table></figure><p>2018-12-26<br>可以不阻塞当前运行的程序</p><ul><li>shiny 异步 编程 <a href="https://rstudio.github.io/promises/articles/intro.html" target="_blank" rel="noopener">https://rstudio.github.io/promises/articles/intro.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      R语言框架中的Rshiny Web框架，学习记录相关文档，命令行配置项，发布，异步编程。
    
    </summary>
    
      <category term="大后端" scheme="https://luoyunchong.github.io/hexo-blog/categories/%E5%A4%A7%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Rshiny" scheme="https://luoyunchong.github.io/hexo-blog/tags/Rshiny/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习记录</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2018/12/02/%E5%A4%A7%E5%90%8E%E7%AB%AF/MySQL%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2018/12/02/大后端/MySQL学习记录/</id>
    <published>2018-12-02T15:21:22.000Z</published>
    <updated>2019-06-25T06:26:30.354Z</updated>
    
    <content type="html"><![CDATA[<p>Navicat Premium 12连接MySQL8+时出现2059错误解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;password&apos;;</span><br></pre></td></tr></table></figure><h5 id="上面那行以mysql-native-password的加密规则更新了用户的密码"><a href="#上面那行以mysql-native-password的加密规则更新了用户的密码" class="headerlink" title="上面那行以mysql_native_password的加密规则更新了用户的密码"></a>上面那行以mysql_native_password的加密规则更新了用户的密码</h5><p>password 对应的字符串改成你原本的密码就行了。具体原因就是如上个博客所说，mysql8.0版本以后的密码规则有变更，旧的连接工具必须升级新的驱动才可解决此问题，但，升级后，就要提示只有14天使用权限。所以，将加密规则改成mysql_native_password 即可。</p><ul><li><p><a href="https://blog.csdn.net/qq_29932025/article/details/80045716" target="_blank" rel="noopener">Navicat Premium 12连接MySQL8.0出现2059错误</a></p></li><li><p><a href="https://www.jianshu.com/p/73fb45b9da73" target="_blank" rel="noopener">ubuntu16.04 安装mysql5.7并设置root远程访问</a></p></li><li><p><a href="https://mp.weixin.qq.com/s?__biz=MzU0Mzk1OTU2Mg==&mid=2247484623&idx=1&sn=b235bb5222ea3391f66f0be0812df49c&chksm=fb023baacc75b2bc8d45b81b9b99a3343ebc877802840a3963d14fc49ae0eda98651f1a9f86e&mpshare=1&scene=23&srcid=06101AKYKpn48TwJXL7VLQ17#rd" target="_blank" rel="noopener">Docker最全教程之MySQL容器化 （二十五）</a></p></li></ul><h3 id="根据父菜单id得到所有的子节点"><a href="#根据父菜单id得到所有的子节点" class="headerlink" title="根据父菜单id得到所有的子节点"></a>根据父菜单id得到所有的子节点</h3><p>MYSQL写法 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select id from (</span><br><span class="line">              select t1.id,</span><br><span class="line">              if(find_in_set(parentId, @pids) &gt; 0, @pids := concat(@pids, &apos;,&apos;, id), 0) as ischild</span><br><span class="line">              from (</span><br><span class="line">                   select id,parentId from re_menu t where t.status = 1 order by parentId, id</span><br><span class="line">                  ) t1,</span><br><span class="line">                  (select @pids := 要查询的菜单节点 id) t2</span><br><span class="line">             ) t3 where ischild != 0</span><br></pre></td></tr></table></figure><p>由于@符号与参数冲突，使用存储过程解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE DEFINER=`root`@`localhost` PROCEDURE `OrganizationChildrens`(IN `pid` BIGINT)</span><br><span class="line">BEGIN</span><br><span class="line"> select Id,ParentId,DisplayName as Text from (</span><br><span class="line">              select t1.id,t1.ParentId,t1.DisplayName,</span><br><span class="line">              if(find_in_set(parentId, @pids) &gt; 0, @pids := concat(@pids, &apos;,&apos;, id), 0) as ischild</span><br><span class="line">              from (</span><br><span class="line">                   select Id,ParentId,DisplayName from AbpOrganizationUnits t where t.IsDeleted = &apos;0&apos; order by ParentId, id</span><br><span class="line">                  ) t1,</span><br><span class="line">                  (select @pids :=pid) t2</span><br><span class="line">             ) t3 where ischild != 0; </span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>ABP框架中调用存储过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public List&lt;TreeSelectModel&gt; GetChildrens(long? pid)</span><br><span class="line">&#123;</span><br><span class="line">    string sql = $&quot;call OrganizationChildrens(&#123;pid&#125;)&quot;;</span><br><span class="line"></span><br><span class="line">    return _orginazationDapperRepository.Query&lt;TreeSelectModel&gt;(sql).ToList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Mysql8.0+使用Navicat Premium 12连接2059错误，通过修改密码规则即可。Docker下的MySQL容器化，根据父菜单id得到所有的子节点，MySQL新建存储过程，ABP中调用存储过程
    
    </summary>
    
      <category term="MySQL" scheme="https://luoyunchong.github.io/hexo-blog/categories/MySQL/"/>
    
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/tags/ABP/"/>
    
      <category term="MySQL" scheme="https://luoyunchong.github.io/hexo-blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>记一次.NET 与R语言交互</title>
    <link href="https://luoyunchong.github.io/hexo-blog/2018/07/03/ABP/%E8%AE%B0%E4%B8%80%E6%AC%A1.NET%20%E4%B8%8ER%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92/"/>
    <id>https://luoyunchong.github.io/hexo-blog/2018/07/03/ABP/记一次.NET 与R语言交互/</id>
    <published>2018-07-02T16:50:27.000Z</published>
    <updated>2019-06-25T06:34:12.271Z</updated>
    
    <content type="html"><![CDATA[<p>项目主要使用.NET相关技术，最近因为项目中要将写好的R语言的代码，直接通过.NET调用，得到计算结果，遇到了这么多的坑，在此记下一些过程，文档太少，英文不好！！！</p><blockquote><p>使用的类库是  RDotNet   ,开源地址：<a href="https://github.com/jmp75/rdotnet" target="_blank" rel="noopener">R.NET</a><br>他有官网的：<a href="https://jmp75.github.io/rdotnet/" target="_blank" rel="noopener">对R.NET的一些介绍</a> ，这个可能需要翻墙。</p></blockquote><a id="more"></a><p>我找了很多博客，在CSDN上的代码，基本都是重复的，也没有太多的介绍，一般情况都是官网直接翻译下来的，遇到一些问题时，根本查不到是什么原因。<br>那么，遇到问题，怎么办？<br>1、看官网，里面有一些示例的链接：<a href="https://github.com/jmp75/rdotnet-onboarding" target="_blank" rel="noopener">这个相当于示例代码库</a><br>2、看github上，开源地址的Issue，看不懂英语，也要看，有些问题，看完你就会懂了。</p><p>R.NET是什么？</p><p>  我的理解，R语言就像是SQL语言，用于数据计算，数据处理。R.Net这个类库就类似ADO.NET的技术，帮助我们实现.NET程序访问R语言代码，R.NET就相当于一个驱动程序。当然，严格意义上，我也不知道RDotNet是不是这样子，看他介绍，应该是起一R引擎。。。。（不懂.jpg）</p><p>使用RDotNet的步骤：<br>1、首先，你要看懂一些简单的R程序，就像，你不懂sql 语句，你怎么写ADO.NETt程序一样<br>（安装R的环境，不要装最新的3.5版本，因为，R.NET并没有做到最新的版本，看他的github就知道了，我本地装的3.3.3，一点问题都没有。如果你安装3.5版本，会一直报一个空指针异常，反正我被坑了。）<br>2、将我上面所说的示例代码库下载下来，从最简单的代码开始看起。</p><h3 id="如下为开发过程中可能出现的问题！"><a href="#如下为开发过程中可能出现的问题！" class="headerlink" title="如下为开发过程中可能出现的问题！"></a>如下为开发过程中可能出现的问题！</h3><ul><li>而我遇到什么样的问题呢？ 我是如何解决的？</li><li>还有哪些问题需要解决？</li><li>这个类库还有哪些问题不能解决，他有哪些缺点？</li></ul><p>回答上面的问题.</p><h4 id="1-我遇到的问题。"><a href="#1-我遇到的问题。" class="headerlink" title="1.我遇到的问题。"></a>1.我遇到的问题。</h4><p>1）、安装过新的R环境3.5导致一直报错，一点思路都没有。<br>如何解决：看github的issue，看到有人提的问题，大意是指。R.NET不能支持到最新的R语言版本。<br>2）、一个简单的程序，在控制台上执行，是OK的。然而在ASP.NET MVC程序上一直不成功。<br>如何解决：第一步：先把R的环境变量配置好，类似JDK的环境变量配置<br>找到自己的R语言位置，将32位和64位的环境都配置至path中 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;C:\Program Files\R\R-3.3.3\bin\i386;C:\Program Files\R\R-3.3.3\bin\x64;</span><br></pre></td></tr></table></figure><p>第二步，如何还有问题的话：比如一直报StackOverflowException的异常，建议你看他的issue:<a href="https://github.com/jmp75/rdotnet/issues/74" target="_blank" rel="noopener">这个是他们的讨论</a><br>原本我也遇到这个问题，但R的版本用了3.3,就没这个错了。<br>3）、当R的引擎正常结束后，调用 dispose后，下次调用 就会报错，那就不调用 dispose方法吧。<br>那个作者说：There can only be one R engine in a process, and R itself is largely not thread-safe.</p><h4 id="2-还有哪些问题需要解决？"><a href="#2-还有哪些问题需要解决？" class="headerlink" title="2.还有哪些问题需要解决？"></a>2.还有哪些问题需要解决？</h4><p>1)   以<strong>管理员权限</strong>运行Rgui,并指定包安装的位置，防止安装到其他目录<br>此命令设置当前包安装的位置，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.libPaths(&quot;C:/Program Files/R/R-3.3.3/library&quot;)</span><br></pre></td></tr></table></figure><p>此命令查看当前包会安装的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.libPaths()</span><br></pre></td></tr></table></figure><p>2) 如果有些包无法正常安装，如果能找到那个包，可直接复制其至目录C:/Program Files/R/R-3.3.3/library<br>3) 运行和发布后的代码都应运行在64位机子及平台上。</p><h4 id="3-这个类库还有哪些问题不能解决，他有哪些缺点？"><a href="#3-这个类库还有哪些问题不能解决，他有哪些缺点？" class="headerlink" title="3.这个类库还有哪些问题不能解决，他有哪些缺点？"></a>3.这个类库还有哪些问题不能解决，他有哪些缺点？</h4><p>1) 不能兼容所有的R版本，目前只兼容到R3.3.3。<br>2) 如下代码在本机windows10 专业版 中文版电脑上运行会乱码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CharacterVector datFname = engine.CreateCharacter(&quot;我是中文&quot;);</span><br></pre></td></tr></table></figure><p> 我研究下代码，是这个类中的方法有问题InternalString  下的方法 StringFromNativeUtf8<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// Convert utf8 to string</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;utf8&quot;&gt;utf8 to convert&lt;/param&gt;</span><br><span class="line"></span><br><span class="line">public static string StringFromNativeUtf8(IntPtr utf8)</span><br><span class="line">&#123;</span><br><span class="line">    int len = 0;</span><br><span class="line">    while (Marshal.ReadByte(utf8, len) != 0) ++len;</span><br><span class="line">    byte[] buffer = new byte[len];</span><br><span class="line">    Marshal.Copy(utf8, buffer, 0, buffer.Length);</span><br><span class="line">    return Encoding.UTF8.GetString(buffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我在我本地调试源码时，发现，如果包含中文时，采用Encoding.Default.GetString(buffer);转换，这里就可以正常转换，但这样子，就只支持中文和英文了。而且，好像在测试过程中，改成Default后，如下方法中包含中文，反而乱码了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string[] rownames = engine.GetSymbol(&quot;rownames&quot;).AsCharacter().ToArray();</span><br></pre></td></tr></table></figure><p> 所以我准备直接用最简单的方式 ，判断buffer的编码，如果不为UTF8,Convert为UTF8，然后返回，否则，这里就需要多此一举，因为，在测试过程发现，判断UTF8，不准确，明明不是UTF8，还是返回了UTF8，所以在这里需要判断，转换后的数据是否包含中文，如果包含，则直接返回，否则要从Default（根据系统的编码决定），转换为UTF8，就能返回中文 。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// Convert utf8 to string</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;utf8&quot;&gt;utf8 to convert&lt;/param&gt;</span><br><span class="line"></span><br><span class="line">public static string StringFromNativeUtf8(IntPtr utf8)</span><br><span class="line">&#123;</span><br><span class="line">    int len = 0;</span><br><span class="line">    while (Marshal.ReadByte(utf8, len) != 0) ++len;</span><br><span class="line">    byte[] buffer = new byte[len];</span><br><span class="line">    Marshal.Copy(utf8, buffer, 0, buffer.Length);</span><br><span class="line">    Encoding encoding = GetType(buffer);</span><br><span class="line">    if (encoding.Equals(Encoding.UTF8))</span><br><span class="line">    &#123;</span><br><span class="line">        string r = Encoding.UTF8.GetString(buffer);</span><br><span class="line">        if (System.Text.RegularExpressions.Regex.IsMatch(r, @&quot;[\u4e00-\u9fbb]+$&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            return r;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] newBuffer = Encoding.Convert(Encoding.Default, Encoding.UTF8, buffer);</span><br><span class="line">            return Encoding.UTF8.GetString(newBuffer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        byte[] newBuffer = Encoding.Convert(encoding, Encoding.UTF8, buffer);</span><br><span class="line">        return Encoding.UTF8.GetString(newBuffer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>代码已放到github</strong></p><blockquote><p>由于该 <a href="https://github.com/jmp75/rdotnet" target="_blank" rel="noopener">R.NET类库 </a>长期未维护，还是有很多BUG，所以我fork了一份，以便解决部分简单BUG问题， <a href="https://github.com/luoyunchong/rdotnet" target="_blank" rel="noopener">github开源地址</a></p></blockquote><h3 id="相关博客介绍"><a href="#相关博客介绍" class="headerlink" title="相关博客介绍"></a>相关博客介绍</h3><ul><li><a href="https://blog.csdn.net/clearskychan/article/details/53431535" target="_blank" rel="noopener">用C#调用R语言开发.NET MVC Web服务</a> 此文章中介绍了.NET启动控制台调用R代码，这个思路非常好，一开始对R语言了解甚少，所以还是使用R.NET来实现.NET与R语言的交互，反而耗时耗力。</li><li><a href="https://blog.csdn.net/wzgl__wh/article/details/77099903" target="_blank" rel="noopener">一键运行R脚本</a> 这个文章让我了解到Rscript.exe这个程序的作用，以及执行方式。</li></ul><ul><li><a href="https://blog.csdn.net/guoer9973/article/details/45953471" target="_blank" rel="noopener">c#调用R语言（原创翻译）</a></li></ul><p>由于开发过程中，有个R程序运行时间非常长，最长可达2小时，所以只能以后台任务方式执行，但 RDotNET，一次只能运行一个，不执行完，其他的程序在WEB项目下无法正常运行，看了上面的文章，有了思路 ：使用.NET的进程Process起一个cmd命令，类似 java配置好环境变量后可使用java,javac命令一样，配置到Path中后，可直接在cmd中使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rscript.exe <span class="string">"某目录下\test.R"</span>  agruments</span><br></pre></td></tr></table></figure><p>其中R程序包要有双引号   多个参数使用空格分隔 ，如下为.NET下使用Process启动cmd命令，并执行Rscript.exe 命令启动R引擎，让其后台运行，运行结束后，才会往后执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> public void Execute()</span><br><span class="line">     &#123;</span><br><span class="line">         List&lt;string&gt; arguments = new List&lt;string&gt;</span><br><span class="line">         &#123;</span><br><span class="line">             参数</span><br><span class="line">         &#125;;</span><br><span class="line"></span><br><span class="line">         Process cmd = new Process</span><br><span class="line">         &#123;</span><br><span class="line">             StartInfo =</span><br><span class="line">             &#123;</span><br><span class="line">                 FileName = @&quot;Rscript.exe&quot;,</span><br><span class="line">                 WorkingDirectory = AppFolders.RSourceCodeFolder,//.R代码的位置 &quot;E:\svn\CHNMed\CHNMed.Web\DataUsers\RSourceCode&quot;</span><br><span class="line">                 UseShellExecute = false,</span><br><span class="line">                 RedirectStandardOutput = true,</span><br><span class="line">                 RedirectStandardError = true,</span><br><span class="line">                 Arguments = &quot; Test.r &quot; + string.Join(&quot; &quot;, arguments),</span><br><span class="line">                 CreateNoWindow = true,//不显示程序窗口</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;;</span><br><span class="line">         cmd.Start();//启动程序</span><br><span class="line">         var output = cmd.StandardOutput.ReadToEnd();</span><br><span class="line">         var error = cmd.StandardError.ReadToEnd();</span><br><span class="line">         cmd.WaitForExit();//等待控制台程序执行完成</span><br><span class="line">cmd.Close();//关闭该进程</span><br><span class="line">         Logger.InfoFormat($&quot;参数：&#123;output&#125;出错信息:&#123;error&#125;&quot;);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目主要使用.NET相关技术，最近因为项目中要将写好的R语言的代码，直接通过.NET调用，得到计算结果，遇到了这么多的坑，在此记下一些过程，文档太少，英文不好！！！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用的类库是  RDotNet   ,开源地址：&lt;a href=&quot;https://github.com/jmp75/rdotnet&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;R.NET&lt;/a&gt;&lt;br&gt;他有官网的：&lt;a href=&quot;https://jmp75.github.io/rdotnet/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;对R.NET的一些介绍&lt;/a&gt; ，这个可能需要翻墙。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term=".NET Framework" scheme="https://luoyunchong.github.io/hexo-blog/categories/NET-Framework/"/>
    
    
      <category term="ABP" scheme="https://luoyunchong.github.io/hexo-blog/tags/ABP/"/>
    
      <category term=".NET Framework" scheme="https://luoyunchong.github.io/hexo-blog/tags/NET-Framework/"/>
    
      <category term="R.NET" scheme="https://luoyunchong.github.io/hexo-blog/tags/R-NET/"/>
    
  </entry>
  
</feed>
